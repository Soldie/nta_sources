#include "stdinc.h"
#pragma comment(linker, "/export:AcquireSRWLockExclusive=kernel32.AcquireSRWLockExclusive")
#pragma comment(linker, "/export:AcquireSRWLockShared=kernel32.AcquireSRWLockShared")
#pragma comment(linker, "/export:ActivateActCtx=kernel32.ActivateActCtx")
#pragma comment(linker, "/export:AddAtomA=kernel32.AddAtomA")
#pragma comment(linker, "/export:AddAtomW=kernel32.AddAtomW")
#pragma comment(linker, "/export:AddConsoleAliasA=kernel32.AddConsoleAliasA")
#pragma comment(linker, "/export:AddConsoleAliasW=kernel32.AddConsoleAliasW")
#pragma comment(linker, "/export:AddIntegrityLabelToBoundaryDescriptor=kernel32.AddIntegrityLabelToBoundaryDescriptor")
#pragma comment(linker, "/export:AddLocalAlternateComputerNameA=kernel32.AddLocalAlternateComputerNameA")
#pragma comment(linker, "/export:AddLocalAlternateComputerNameW=kernel32.AddLocalAlternateComputerNameW")
#pragma comment(linker, "/export:AddRefActCtx=kernel32.AddRefActCtx")
#pragma comment(linker, "/export:AddSIDToBoundaryDescriptor=kernel32.AddSIDToBoundaryDescriptor")
#pragma comment(linker, "/export:AddSecureMemoryCacheCallback=kernel32.AddSecureMemoryCacheCallback")
#pragma comment(linker, "/export:AddVectoredContinueHandler=kernel32.AddVectoredContinueHandler")
#pragma comment(linker, "/export:AddVectoredExceptionHandler=kernel32.AddVectoredExceptionHandler")
#pragma comment(linker, "/export:AdjustCalendarDate=kernel32.AdjustCalendarDate")
#pragma comment(linker, "/export:AllocConsole=kernel32.AllocConsole")
#pragma comment(linker, "/export:AllocateUserPhysicalPages=kernel32.AllocateUserPhysicalPages")
#pragma comment(linker, "/export:AllocateUserPhysicalPagesNuma=kernel32.AllocateUserPhysicalPagesNuma")
#pragma comment(linker, "/export:ApplicationRecoveryFinished=kernel32.ApplicationRecoveryFinished")
#pragma comment(linker, "/export:ApplicationRecoveryInProgress=kernel32.ApplicationRecoveryInProgress")
#pragma comment(linker, "/export:AreFileApisANSI=kernel32.AreFileApisANSI")
#pragma comment(linker, "/export:AssignProcessToJobObject=kernel32.AssignProcessToJobObject")
#pragma comment(linker, "/export:AttachConsole=kernel32.AttachConsole")
#pragma comment(linker, "/export:BackupRead=kernel32.BackupRead")
#pragma comment(linker, "/export:BackupSeek=kernel32.BackupSeek")
#pragma comment(linker, "/export:BackupWrite=kernel32.BackupWrite")
#pragma comment(linker, "/export:BaseCheckAppcompatCache=kernel32.BaseCheckAppcompatCache")
#pragma comment(linker, "/export:BaseCheckAppcompatCacheEx=kernel32.BaseCheckAppcompatCacheEx")
#pragma comment(linker, "/export:BaseCheckRunApp=kernel32.BaseCheckRunApp")
#pragma comment(linker, "/export:BaseCleanupAppcompatCacheSupport=kernel32.BaseCleanupAppcompatCacheSupport")
#pragma comment(linker, "/export:BaseDllReadWriteIniFile=kernel32.BaseDllReadWriteIniFile")
#pragma comment(linker, "/export:BaseDumpAppcompatCache=kernel32.BaseDumpAppcompatCache")
#pragma comment(linker, "/export:BaseFlushAppcompatCache=kernel32.BaseFlushAppcompatCache")
#pragma comment(linker, "/export:BaseFormatObjectAttributes=kernel32.BaseFormatObjectAttributes")
#pragma comment(linker, "/export:BaseFormatTimeOut=kernel32.BaseFormatTimeOut")
#pragma comment(linker, "/export:BaseGenerateAppCompatData=kernel32.BaseGenerateAppCompatData")
#pragma comment(linker, "/export:BaseGetNamedObjectDirectory=kernel32.BaseGetNamedObjectDirectory")
#pragma comment(linker, "/export:BaseInitAppcompatCacheSupport=kernel32.BaseInitAppcompatCacheSupport")
#pragma comment(linker, "/export:BaseIsAppcompatInfrastructureDisabled=kernel32.BaseIsAppcompatInfrastructureDisabled")
#pragma comment(linker, "/export:BaseQueryModuleData=kernel32.BaseQueryModuleData")
#pragma comment(linker, "/export:BaseSetLastNTError=kernel32.BaseSetLastNTError")
#pragma comment(linker, "/export:BaseThreadInitThunk=kernel32.BaseThreadInitThunk")
#pragma comment(linker, "/export:BaseUpdateAppcompatCache=kernel32.BaseUpdateAppcompatCache")
#pragma comment(linker, "/export:BaseVerifyUnicodeString=kernel32.BaseVerifyUnicodeString")
#pragma comment(linker, "/export:Basep8BitStringToDynamicUnicodeString=kernel32.Basep8BitStringToDynamicUnicodeString")
#pragma comment(linker, "/export:BasepAllocateActivationContextActivationBlock=kernel32.BasepAllocateActivationContextActivationBlock")
#pragma comment(linker, "/export:BasepAnsiStringToDynamicUnicodeString=kernel32.BasepAnsiStringToDynamicUnicodeString")
#pragma comment(linker, "/export:BasepCheckAppCompat=kernel32.BasepCheckAppCompat")
#pragma comment(linker, "/export:BasepCheckBadapp=kernel32.BasepCheckBadapp")
#pragma comment(linker, "/export:BasepCheckWinSaferRestrictions=kernel32.BasepCheckWinSaferRestrictions")
#pragma comment(linker, "/export:BasepFreeActivationContextActivationBlock=kernel32.BasepFreeActivationContextActivationBlock")
#pragma comment(linker, "/export:BasepFreeAppCompatData=kernel32.BasepFreeAppCompatData")
#pragma comment(linker, "/export:BasepMapModuleHandle=kernel32.BasepMapModuleHandle")
#pragma comment(linker, "/export:Beep=kernel32.Beep")
#pragma comment(linker, "/export:BeginUpdateResourceA=kernel32.BeginUpdateResourceA")
#pragma comment(linker, "/export:BeginUpdateResourceW=kernel32.BeginUpdateResourceW")
#pragma comment(linker, "/export:BindIoCompletionCallback=kernel32.BindIoCompletionCallback")
#pragma comment(linker, "/export:BuildCommDCBA=kernel32.BuildCommDCBA")
#pragma comment(linker, "/export:BuildCommDCBAndTimeoutsA=kernel32.BuildCommDCBAndTimeoutsA")
#pragma comment(linker, "/export:BuildCommDCBAndTimeoutsW=kernel32.BuildCommDCBAndTimeoutsW")
#pragma comment(linker, "/export:BuildCommDCBW=kernel32.BuildCommDCBW")
#pragma comment(linker, "/export:CallNamedPipeA=kernel32.CallNamedPipeA")
#pragma comment(linker, "/export:CallNamedPipeW=kernel32.CallNamedPipeW")
#pragma comment(linker, "/export:CallbackMayRunLong=kernel32.CallbackMayRunLong")
#pragma comment(linker, "/export:CancelDeviceWakeupRequest=kernel32.CancelDeviceWakeupRequest")
#pragma comment(linker, "/export:CancelIo=kernel32.CancelIo")
#pragma comment(linker, "/export:CancelIoEx=kernel32.CancelIoEx")
#pragma comment(linker, "/export:CancelSynchronousIo=kernel32.CancelSynchronousIo")
#pragma comment(linker, "/export:CancelThreadpoolIo=kernel32.CancelThreadpoolIo")
#pragma comment(linker, "/export:CancelTimerQueueTimer=kernel32.CancelTimerQueueTimer")
#pragma comment(linker, "/export:CancelWaitableTimer=kernel32.CancelWaitableTimer")
#pragma comment(linker, "/export:ChangeTimerQueueTimer=kernel32.ChangeTimerQueueTimer")
#pragma comment(linker, "/export:CheckElevation=kernel32.CheckElevation")
#pragma comment(linker, "/export:CheckElevationEnabled=kernel32.CheckElevationEnabled")
#pragma comment(linker, "/export:CheckForReadOnlyResource=kernel32.CheckForReadOnlyResource")
#pragma comment(linker, "/export:CheckNameLegalDOS8Dot3A=kernel32.CheckNameLegalDOS8Dot3A")
#pragma comment(linker, "/export:CheckNameLegalDOS8Dot3W=kernel32.CheckNameLegalDOS8Dot3W")
#pragma comment(linker, "/export:CheckRemoteDebuggerPresent=kernel32.CheckRemoteDebuggerPresent")
#pragma comment(linker, "/export:ClearCommBreak=kernel32.ClearCommBreak")
#pragma comment(linker, "/export:ClearCommError=kernel32.ClearCommError")
#pragma comment(linker, "/export:CloseConsoleHandle=kernel32.CloseConsoleHandle")
#pragma comment(linker, "/export:CloseHandle=kernel32.CloseHandle")
#pragma comment(linker, "/export:ClosePrivateNamespace=kernel32.ClosePrivateNamespace")
#pragma comment(linker, "/export:CloseProfileUserMapping=kernel32.CloseProfileUserMapping")
#pragma comment(linker, "/export:CloseThreadpool=kernel32.CloseThreadpool")
#pragma comment(linker, "/export:CloseThreadpoolCleanupGroup=kernel32.CloseThreadpoolCleanupGroup")
#pragma comment(linker, "/export:CloseThreadpoolCleanupGroupMembers=kernel32.CloseThreadpoolCleanupGroupMembers")
#pragma comment(linker, "/export:CloseThreadpoolIo=kernel32.CloseThreadpoolIo")
#pragma comment(linker, "/export:CloseThreadpoolTimer=kernel32.CloseThreadpoolTimer")
#pragma comment(linker, "/export:CloseThreadpoolWait=kernel32.CloseThreadpoolWait")
#pragma comment(linker, "/export:CloseThreadpoolWork=kernel32.CloseThreadpoolWork")
#pragma comment(linker, "/export:CmdBatNotification=kernel32.CmdBatNotification")
#pragma comment(linker, "/export:CommConfigDialogA=kernel32.CommConfigDialogA")
#pragma comment(linker, "/export:CommConfigDialogW=kernel32.CommConfigDialogW")
#pragma comment(linker, "/export:CompareCalendarDates=kernel32.CompareCalendarDates")
#pragma comment(linker, "/export:CompareFileTime=kernel32.CompareFileTime")
#pragma comment(linker, "/export:CompareStringA=kernel32.CompareStringA")
#pragma comment(linker, "/export:CompareStringEx=kernel32.CompareStringEx")
#pragma comment(linker, "/export:CompareStringOrdinal=kernel32.CompareStringOrdinal")
#pragma comment(linker, "/export:CompareStringW=kernel32.CompareStringW")
#pragma comment(linker, "/export:ConnectNamedPipe=kernel32.ConnectNamedPipe")
#pragma comment(linker, "/export:ConsoleMenuControl=kernel32.ConsoleMenuControl")
#pragma comment(linker, "/export:ContinueDebugEvent=kernel32.ContinueDebugEvent")
#pragma comment(linker, "/export:ConvertCalDateTimeToSystemTime=kernel32.ConvertCalDateTimeToSystemTime")
#pragma comment(linker, "/export:ConvertDefaultLocale=kernel32.ConvertDefaultLocale")
#pragma comment(linker, "/export:ConvertFiberToThread=kernel32.ConvertFiberToThread")
#pragma comment(linker, "/export:ConvertNLSDayOfWeekToWin32DayOfWeek=kernel32.ConvertNLSDayOfWeekToWin32DayOfWeek")
#pragma comment(linker, "/export:ConvertSystemTimeToCalDateTime=kernel32.ConvertSystemTimeToCalDateTime")
#pragma comment(linker, "/export:ConvertThreadToFiber=kernel32.ConvertThreadToFiber")
#pragma comment(linker, "/export:ConvertThreadToFiberEx=kernel32.ConvertThreadToFiberEx")
#pragma comment(linker, "/export:CopyExtendedContext=kernel32.CopyExtendedContext")
#pragma comment(linker, "/export:CopyFileA=kernel32.CopyFileA")
#pragma comment(linker, "/export:CopyFileExA=kernel32.CopyFileExA")
#pragma comment(linker, "/export:CopyFileExW=kernel32.CopyFileExW")
#pragma comment(linker, "/export:CopyFileTransactedA=kernel32.CopyFileTransactedA")
#pragma comment(linker, "/export:CopyFileTransactedW=kernel32.CopyFileTransactedW")
#pragma comment(linker, "/export:CopyFileW=kernel32.CopyFileW")
#pragma comment(linker, "/export:CopyLZFile=kernel32.CopyLZFile")
#pragma comment(linker, "/export:CreateActCtxA=kernel32.CreateActCtxA")
#pragma comment(linker, "/export:CreateActCtxW=kernel32.CreateActCtxW")
#pragma comment(linker, "/export:CreateBoundaryDescriptorA=kernel32.CreateBoundaryDescriptorA")
#pragma comment(linker, "/export:CreateBoundaryDescriptorW=kernel32.CreateBoundaryDescriptorW")
#pragma comment(linker, "/export:CreateConsoleScreenBuffer=kernel32.CreateConsoleScreenBuffer")
#pragma comment(linker, "/export:CreateDirectoryA=kernel32.CreateDirectoryA")
#pragma comment(linker, "/export:CreateDirectoryExA=kernel32.CreateDirectoryExA")
#pragma comment(linker, "/export:CreateDirectoryExW=kernel32.CreateDirectoryExW")
#pragma comment(linker, "/export:CreateDirectoryTransactedA=kernel32.CreateDirectoryTransactedA")
#pragma comment(linker, "/export:CreateDirectoryTransactedW=kernel32.CreateDirectoryTransactedW")
#pragma comment(linker, "/export:CreateDirectoryW=kernel32.CreateDirectoryW")
#pragma comment(linker, "/export:CreateEventA=kernel32.CreateEventA")
#pragma comment(linker, "/export:CreateEventExA=kernel32.CreateEventExA")
#pragma comment(linker, "/export:CreateEventExW=kernel32.CreateEventExW")
#pragma comment(linker, "/export:CreateEventW=kernel32.CreateEventW")
#pragma comment(linker, "/export:CreateFiber=kernel32.CreateFiber")
#pragma comment(linker, "/export:CreateFiberEx=kernel32.CreateFiberEx")
#pragma comment(linker, "/export:CreateFileA=kernel32.CreateFileA")
#pragma comment(linker, "/export:CreateFileMappingA=kernel32.CreateFileMappingA")
#pragma comment(linker, "/export:CreateFileMappingNumaA=kernel32.CreateFileMappingNumaA")
#pragma comment(linker, "/export:CreateFileMappingNumaW=kernel32.CreateFileMappingNumaW")
#pragma comment(linker, "/export:CreateFileMappingW=kernel32.CreateFileMappingW")
#pragma comment(linker, "/export:CreateFileTransactedA=kernel32.CreateFileTransactedA")
#pragma comment(linker, "/export:CreateFileTransactedW=kernel32.CreateFileTransactedW")
#pragma comment(linker, "/export:CreateFileW=kernel32.CreateFileW")
#pragma comment(linker, "/export:CreateHardLinkA=kernel32.CreateHardLinkA")
#pragma comment(linker, "/export:CreateHardLinkTransactedA=kernel32.CreateHardLinkTransactedA")
#pragma comment(linker, "/export:CreateHardLinkTransactedW=kernel32.CreateHardLinkTransactedW")
#pragma comment(linker, "/export:CreateHardLinkW=kernel32.CreateHardLinkW")
#pragma comment(linker, "/export:CreateIoCompletionPort=kernel32.CreateIoCompletionPort")
#pragma comment(linker, "/export:CreateJobObjectA=kernel32.CreateJobObjectA")
#pragma comment(linker, "/export:CreateJobObjectW=kernel32.CreateJobObjectW")
#pragma comment(linker, "/export:CreateJobSet=kernel32.CreateJobSet")
#pragma comment(linker, "/export:CreateMailslotA=kernel32.CreateMailslotA")
#pragma comment(linker, "/export:CreateMailslotW=kernel32.CreateMailslotW")
#pragma comment(linker, "/export:CreateMemoryResourceNotification=kernel32.CreateMemoryResourceNotification")
#pragma comment(linker, "/export:CreateMutexA=kernel32.CreateMutexA")
#pragma comment(linker, "/export:CreateMutexExA=kernel32.CreateMutexExA")
#pragma comment(linker, "/export:CreateMutexExW=kernel32.CreateMutexExW")
#pragma comment(linker, "/export:CreateMutexW=kernel32.CreateMutexW")
#pragma comment(linker, "/export:CreateNamedPipeA=kernel32.CreateNamedPipeA")
#pragma comment(linker, "/export:CreateNamedPipeW=kernel32.CreateNamedPipeW")
#pragma comment(linker, "/export:CreatePipe=kernel32.CreatePipe")
#pragma comment(linker, "/export:CreatePrivateNamespaceA=kernel32.CreatePrivateNamespaceA")
#pragma comment(linker, "/export:CreatePrivateNamespaceW=kernel32.CreatePrivateNamespaceW")
#pragma comment(linker, "/export:CreateProcessA=kernel32.CreateProcessA")
#pragma comment(linker, "/export:CreateProcessAsUserW=kernel32.CreateProcessAsUserW")
#pragma comment(linker, "/export:CreateProcessInternalA=kernel32.CreateProcessInternalA")
#pragma comment(linker, "/export:CreateProcessInternalW=kernel32.CreateProcessInternalW")
#pragma comment(linker, "/export:CreateProcessW=kernel32.CreateProcessW")
#pragma comment(linker, "/export:CreateRemoteThread=kernel32.CreateRemoteThread")
#pragma comment(linker, "/export:CreateRemoteThreadEx=kernel32.CreateRemoteThreadEx")
#pragma comment(linker, "/export:CreateSemaphoreA=kernel32.CreateSemaphoreA")
#pragma comment(linker, "/export:CreateSemaphoreExA=kernel32.CreateSemaphoreExA")
#pragma comment(linker, "/export:CreateSemaphoreExW=kernel32.CreateSemaphoreExW")
#pragma comment(linker, "/export:CreateSemaphoreW=kernel32.CreateSemaphoreW")
#pragma comment(linker, "/export:CreateSocketHandle=kernel32.CreateSocketHandle")
#pragma comment(linker, "/export:CreateSymbolicLinkA=kernel32.CreateSymbolicLinkA")
#pragma comment(linker, "/export:CreateSymbolicLinkTransactedA=kernel32.CreateSymbolicLinkTransactedA")
#pragma comment(linker, "/export:CreateSymbolicLinkTransactedW=kernel32.CreateSymbolicLinkTransactedW")
#pragma comment(linker, "/export:CreateSymbolicLinkW=kernel32.CreateSymbolicLinkW")
#pragma comment(linker, "/export:CreateTapePartition=kernel32.CreateTapePartition")
#pragma comment(linker, "/export:CreateThread=kernel32.CreateThread")
#pragma comment(linker, "/export:CreateThreadpool=kernel32.CreateThreadpool")
#pragma comment(linker, "/export:CreateThreadpoolCleanupGroup=kernel32.CreateThreadpoolCleanupGroup")
#pragma comment(linker, "/export:CreateThreadpoolIo=kernel32.CreateThreadpoolIo")
#pragma comment(linker, "/export:CreateThreadpoolTimer=kernel32.CreateThreadpoolTimer")
#pragma comment(linker, "/export:CreateThreadpoolWait=kernel32.CreateThreadpoolWait")
#pragma comment(linker, "/export:CreateThreadpoolWork=kernel32.CreateThreadpoolWork")
#pragma comment(linker, "/export:CreateTimerQueue=kernel32.CreateTimerQueue")
#pragma comment(linker, "/export:CreateTimerQueueTimer=kernel32.CreateTimerQueueTimer")
#pragma comment(linker, "/export:CreateToolhelp32Snapshot=kernel32.CreateToolhelp32Snapshot")
#pragma comment(linker, "/export:CreateWaitableTimerA=kernel32.CreateWaitableTimerA")
#pragma comment(linker, "/export:CreateWaitableTimerExA=kernel32.CreateWaitableTimerExA")
#pragma comment(linker, "/export:CreateWaitableTimerExW=kernel32.CreateWaitableTimerExW")
#pragma comment(linker, "/export:CreateWaitableTimerW=kernel32.CreateWaitableTimerW")
#pragma comment(linker, "/export:CtrlRoutine=kernel32.CtrlRoutine")
#pragma comment(linker, "/export:DeactivateActCtx=kernel32.DeactivateActCtx")
#pragma comment(linker, "/export:DebugActiveProcess=kernel32.DebugActiveProcess")
#pragma comment(linker, "/export:DebugActiveProcessStop=kernel32.DebugActiveProcessStop")
#pragma comment(linker, "/export:DebugBreak=kernel32.DebugBreak")
#pragma comment(linker, "/export:DebugBreakProcess=kernel32.DebugBreakProcess")
#pragma comment(linker, "/export:DebugSetProcessKillOnExit=kernel32.DebugSetProcessKillOnExit")
#pragma comment(linker, "/export:DecodePointer=kernel32.DecodePointer")
#pragma comment(linker, "/export:DecodeSystemPointer=kernel32.DecodeSystemPointer")
#pragma comment(linker, "/export:DefineDosDeviceA=kernel32.DefineDosDeviceA")
#pragma comment(linker, "/export:DefineDosDeviceW=kernel32.DefineDosDeviceW")
#pragma comment(linker, "/export:DelayLoadFailureHook=kernel32.DelayLoadFailureHook")
#pragma comment(linker, "/export:DeleteAtom=kernel32.DeleteAtom")
#pragma comment(linker, "/export:DeleteBoundaryDescriptor=kernel32.DeleteBoundaryDescriptor")
#pragma comment(linker, "/export:DeleteCriticalSection=kernel32.DeleteCriticalSection")
#pragma comment(linker, "/export:DeleteFiber=kernel32.DeleteFiber")
#pragma comment(linker, "/export:DeleteFileA=kernel32.DeleteFileA")
#pragma comment(linker, "/export:DeleteFileTransactedA=kernel32.DeleteFileTransactedA")
#pragma comment(linker, "/export:DeleteFileTransactedW=kernel32.DeleteFileTransactedW")
#pragma comment(linker, "/export:DeleteFileW=kernel32.DeleteFileW")
#pragma comment(linker, "/export:DeleteProcThreadAttributeList=kernel32.DeleteProcThreadAttributeList")
#pragma comment(linker, "/export:DeleteTimerQueue=kernel32.DeleteTimerQueue")
#pragma comment(linker, "/export:DeleteTimerQueueEx=kernel32.DeleteTimerQueueEx")
#pragma comment(linker, "/export:DeleteTimerQueueTimer=kernel32.DeleteTimerQueueTimer")
#pragma comment(linker, "/export:DeleteVolumeMountPointA=kernel32.DeleteVolumeMountPointA")
#pragma comment(linker, "/export:DeleteVolumeMountPointW=kernel32.DeleteVolumeMountPointW")
#pragma comment(linker, "/export:DeviceIoControl=kernel32.DeviceIoControl")
#pragma comment(linker, "/export:DisableThreadLibraryCalls=kernel32.DisableThreadLibraryCalls")
#pragma comment(linker, "/export:DisableThreadProfiling=kernel32.DisableThreadProfiling")
#pragma comment(linker, "/export:DisassociateCurrentThreadFromCallback=kernel32.DisassociateCurrentThreadFromCallback")
#pragma comment(linker, "/export:DisconnectNamedPipe=kernel32.DisconnectNamedPipe")
#pragma comment(linker, "/export:DnsHostnameToComputerNameA=kernel32.DnsHostnameToComputerNameA")
#pragma comment(linker, "/export:DnsHostnameToComputerNameW=kernel32.DnsHostnameToComputerNameW")
#pragma comment(linker, "/export:DosDateTimeToFileTime=kernel32.DosDateTimeToFileTime")
#pragma comment(linker, "/export:DosPathToSessionPathA=kernel32.DosPathToSessionPathA")
#pragma comment(linker, "/export:DosPathToSessionPathW=kernel32.DosPathToSessionPathW")
#pragma comment(linker, "/export:DuplicateConsoleHandle=kernel32.DuplicateConsoleHandle")
#pragma comment(linker, "/export:DuplicateHandle=kernel32.DuplicateHandle")
#pragma comment(linker, "/export:EnableThreadProfiling=kernel32.EnableThreadProfiling")
#pragma comment(linker, "/export:EncodePointer=kernel32.EncodePointer")
#pragma comment(linker, "/export:EncodeSystemPointer=kernel32.EncodeSystemPointer")
#pragma comment(linker, "/export:EndUpdateResourceA=kernel32.EndUpdateResourceA")
#pragma comment(linker, "/export:EndUpdateResourceW=kernel32.EndUpdateResourceW")
#pragma comment(linker, "/export:EnterCriticalSection=kernel32.EnterCriticalSection")
#pragma comment(linker, "/export:EnumCalendarInfoA=kernel32.EnumCalendarInfoA")
#pragma comment(linker, "/export:EnumCalendarInfoExA=kernel32.EnumCalendarInfoExA")
#pragma comment(linker, "/export:EnumCalendarInfoExEx=kernel32.EnumCalendarInfoExEx")
#pragma comment(linker, "/export:EnumCalendarInfoExW=kernel32.EnumCalendarInfoExW")
#pragma comment(linker, "/export:EnumCalendarInfoW=kernel32.EnumCalendarInfoW")
#pragma comment(linker, "/export:EnumDateFormatsA=kernel32.EnumDateFormatsA")
#pragma comment(linker, "/export:EnumDateFormatsExA=kernel32.EnumDateFormatsExA")
#pragma comment(linker, "/export:EnumDateFormatsExEx=kernel32.EnumDateFormatsExEx")
#pragma comment(linker, "/export:EnumDateFormatsExW=kernel32.EnumDateFormatsExW")
#pragma comment(linker, "/export:EnumDateFormatsW=kernel32.EnumDateFormatsW")
#pragma comment(linker, "/export:EnumLanguageGroupLocalesA=kernel32.EnumLanguageGroupLocalesA")
#pragma comment(linker, "/export:EnumLanguageGroupLocalesW=kernel32.EnumLanguageGroupLocalesW")
#pragma comment(linker, "/export:EnumResourceLanguagesA=kernel32.EnumResourceLanguagesA")
#pragma comment(linker, "/export:EnumResourceLanguagesExA=kernel32.EnumResourceLanguagesExA")
#pragma comment(linker, "/export:EnumResourceLanguagesExW=kernel32.EnumResourceLanguagesExW")
#pragma comment(linker, "/export:EnumResourceLanguagesW=kernel32.EnumResourceLanguagesW")
#pragma comment(linker, "/export:EnumResourceNamesA=kernel32.EnumResourceNamesA")
#pragma comment(linker, "/export:EnumResourceNamesExA=kernel32.EnumResourceNamesExA")
#pragma comment(linker, "/export:EnumResourceNamesExW=kernel32.EnumResourceNamesExW")
#pragma comment(linker, "/export:EnumResourceNamesW=kernel32.EnumResourceNamesW")
#pragma comment(linker, "/export:EnumResourceTypesA=kernel32.EnumResourceTypesA")
#pragma comment(linker, "/export:EnumResourceTypesExA=kernel32.EnumResourceTypesExA")
#pragma comment(linker, "/export:EnumResourceTypesExW=kernel32.EnumResourceTypesExW")
#pragma comment(linker, "/export:EnumResourceTypesW=kernel32.EnumResourceTypesW")
#pragma comment(linker, "/export:EnumSystemCodePagesA=kernel32.EnumSystemCodePagesA")
#pragma comment(linker, "/export:EnumSystemCodePagesW=kernel32.EnumSystemCodePagesW")
#pragma comment(linker, "/export:EnumSystemFirmwareTables=kernel32.EnumSystemFirmwareTables")
#pragma comment(linker, "/export:EnumSystemGeoID=kernel32.EnumSystemGeoID")
#pragma comment(linker, "/export:EnumSystemLanguageGroupsA=kernel32.EnumSystemLanguageGroupsA")
#pragma comment(linker, "/export:EnumSystemLanguageGroupsW=kernel32.EnumSystemLanguageGroupsW")
#pragma comment(linker, "/export:EnumSystemLocalesA=kernel32.EnumSystemLocalesA")
#pragma comment(linker, "/export:EnumSystemLocalesEx=kernel32.EnumSystemLocalesEx")
#pragma comment(linker, "/export:EnumSystemLocalesW=kernel32.EnumSystemLocalesW")
#pragma comment(linker, "/export:EnumTimeFormatsA=kernel32.EnumTimeFormatsA")
#pragma comment(linker, "/export:EnumTimeFormatsEx=kernel32.EnumTimeFormatsEx")
#pragma comment(linker, "/export:EnumTimeFormatsW=kernel32.EnumTimeFormatsW")
#pragma comment(linker, "/export:EnumUILanguagesA=kernel32.EnumUILanguagesA")
#pragma comment(linker, "/export:EnumUILanguagesW=kernel32.EnumUILanguagesW")
#pragma comment(linker, "/export:EnumerateLocalComputerNamesA=kernel32.EnumerateLocalComputerNamesA")
#pragma comment(linker, "/export:EnumerateLocalComputerNamesW=kernel32.EnumerateLocalComputerNamesW")
#pragma comment(linker, "/export:EraseTape=kernel32.EraseTape")
#pragma comment(linker, "/export:EscapeCommFunction=kernel32.EscapeCommFunction")
#pragma comment(linker, "/export:ExitProcess=kernel32.ExitProcess")
#pragma comment(linker, "/export:ExitThread=kernel32.ExitThread")
#pragma comment(linker, "/export:ExitVDM=kernel32.ExitVDM")
#pragma comment(linker, "/export:ExpandEnvironmentStringsA=kernel32.ExpandEnvironmentStringsA")
#pragma comment(linker, "/export:ExpandEnvironmentStringsW=kernel32.ExpandEnvironmentStringsW")
#pragma comment(linker, "/export:ExpungeConsoleCommandHistoryA=kernel32.ExpungeConsoleCommandHistoryA")
#pragma comment(linker, "/export:ExpungeConsoleCommandHistoryW=kernel32.ExpungeConsoleCommandHistoryW")
#pragma comment(linker, "/export:FatalAppExitA=kernel32.FatalAppExitA")
#pragma comment(linker, "/export:FatalAppExitW=kernel32.FatalAppExitW")
#pragma comment(linker, "/export:FatalExit=kernel32.FatalExit")
#pragma comment(linker, "/export:FileTimeToDosDateTime=kernel32.FileTimeToDosDateTime")
#pragma comment(linker, "/export:FileTimeToLocalFileTime=kernel32.FileTimeToLocalFileTime")
#pragma comment(linker, "/export:FileTimeToSystemTime=kernel32.FileTimeToSystemTime")
#pragma comment(linker, "/export:FillConsoleOutputAttribute=kernel32.FillConsoleOutputAttribute")
#pragma comment(linker, "/export:FillConsoleOutputCharacterA=kernel32.FillConsoleOutputCharacterA")
#pragma comment(linker, "/export:FillConsoleOutputCharacterW=kernel32.FillConsoleOutputCharacterW")
#pragma comment(linker, "/export:FindActCtxSectionGuid=kernel32.FindActCtxSectionGuid")
#pragma comment(linker, "/export:FindActCtxSectionStringA=kernel32.FindActCtxSectionStringA")
#pragma comment(linker, "/export:FindActCtxSectionStringW=kernel32.FindActCtxSectionStringW")
#pragma comment(linker, "/export:FindAtomA=kernel32.FindAtomA")
#pragma comment(linker, "/export:FindAtomW=kernel32.FindAtomW")
#pragma comment(linker, "/export:FindClose=kernel32.FindClose")
#pragma comment(linker, "/export:FindCloseChangeNotification=kernel32.FindCloseChangeNotification")
#pragma comment(linker, "/export:FindFirstChangeNotificationA=kernel32.FindFirstChangeNotificationA")
#pragma comment(linker, "/export:FindFirstChangeNotificationW=kernel32.FindFirstChangeNotificationW")
#pragma comment(linker, "/export:FindFirstFileA=kernel32.FindFirstFileA")
#pragma comment(linker, "/export:FindFirstFileExA=kernel32.FindFirstFileExA")
#pragma comment(linker, "/export:FindFirstFileExW=kernel32.FindFirstFileExW")
#pragma comment(linker, "/export:FindFirstFileNameTransactedW=kernel32.FindFirstFileNameTransactedW")
#pragma comment(linker, "/export:FindFirstFileNameW=kernel32.FindFirstFileNameW")
#pragma comment(linker, "/export:FindFirstFileTransactedA=kernel32.FindFirstFileTransactedA")
#pragma comment(linker, "/export:FindFirstFileTransactedW=kernel32.FindFirstFileTransactedW")
#pragma comment(linker, "/export:FindFirstFileW=kernel32.FindFirstFileW")
#pragma comment(linker, "/export:FindFirstStreamTransactedW=kernel32.FindFirstStreamTransactedW")
#pragma comment(linker, "/export:FindFirstStreamW=kernel32.FindFirstStreamW")
#pragma comment(linker, "/export:FindFirstVolumeA=kernel32.FindFirstVolumeA")
#pragma comment(linker, "/export:FindFirstVolumeMountPointA=kernel32.FindFirstVolumeMountPointA")
#pragma comment(linker, "/export:FindFirstVolumeMountPointW=kernel32.FindFirstVolumeMountPointW")
#pragma comment(linker, "/export:FindFirstVolumeW=kernel32.FindFirstVolumeW")
#pragma comment(linker, "/export:FindNLSString=kernel32.FindNLSString")
#pragma comment(linker, "/export:FindNLSStringEx=kernel32.FindNLSStringEx")
#pragma comment(linker, "/export:FindNextChangeNotification=kernel32.FindNextChangeNotification")
#pragma comment(linker, "/export:FindNextFileA=kernel32.FindNextFileA")
#pragma comment(linker, "/export:FindNextFileNameW=kernel32.FindNextFileNameW")
#pragma comment(linker, "/export:FindNextFileW=kernel32.FindNextFileW")
#pragma comment(linker, "/export:FindNextStreamW=kernel32.FindNextStreamW")
#pragma comment(linker, "/export:FindNextVolumeA=kernel32.FindNextVolumeA")
#pragma comment(linker, "/export:FindNextVolumeMountPointA=kernel32.FindNextVolumeMountPointA")
#pragma comment(linker, "/export:FindNextVolumeMountPointW=kernel32.FindNextVolumeMountPointW")
#pragma comment(linker, "/export:FindNextVolumeW=kernel32.FindNextVolumeW")
#pragma comment(linker, "/export:FindResourceA=kernel32.FindResourceA")
#pragma comment(linker, "/export:FindResourceExA=kernel32.FindResourceExA")
#pragma comment(linker, "/export:FindResourceExW=kernel32.FindResourceExW")
#pragma comment(linker, "/export:FindResourceW=kernel32.FindResourceW")
#pragma comment(linker, "/export:FindStringOrdinal=kernel32.FindStringOrdinal")
#pragma comment(linker, "/export:FindVolumeClose=kernel32.FindVolumeClose")
#pragma comment(linker, "/export:FindVolumeMountPointClose=kernel32.FindVolumeMountPointClose")
#pragma comment(linker, "/export:FlsAlloc=kernel32.FlsAlloc")
#pragma comment(linker, "/export:FlsFree=kernel32.FlsFree")
#pragma comment(linker, "/export:FlsGetValue=kernel32.FlsGetValue")
#pragma comment(linker, "/export:FlsSetValue=kernel32.FlsSetValue")
#pragma comment(linker, "/export:FlushConsoleInputBuffer=kernel32.FlushConsoleInputBuffer")
#pragma comment(linker, "/export:FlushFileBuffers=kernel32.FlushFileBuffers")
#pragma comment(linker, "/export:FlushInstructionCache=kernel32.FlushInstructionCache")
#pragma comment(linker, "/export:FlushProcessWriteBuffers=kernel32.FlushProcessWriteBuffers")
#pragma comment(linker, "/export:FlushViewOfFile=kernel32.FlushViewOfFile")
#pragma comment(linker, "/export:FoldStringA=kernel32.FoldStringA")
#pragma comment(linker, "/export:FoldStringW=kernel32.FoldStringW")
#pragma comment(linker, "/export:FormatMessageA=kernel32.FormatMessageA")
#pragma comment(linker, "/export:FormatMessageW=kernel32.FormatMessageW")
#pragma comment(linker, "/export:FreeConsole=kernel32.FreeConsole")
#pragma comment(linker, "/export:FreeEnvironmentStringsA=kernel32.FreeEnvironmentStringsA")
#pragma comment(linker, "/export:FreeEnvironmentStringsW=kernel32.FreeEnvironmentStringsW")
#pragma comment(linker, "/export:FreeLibrary=kernel32.FreeLibrary")
#pragma comment(linker, "/export:FreeLibraryAndExitThread=kernel32.FreeLibraryAndExitThread")
#pragma comment(linker, "/export:FreeLibraryWhenCallbackReturns=kernel32.FreeLibraryWhenCallbackReturns")
#pragma comment(linker, "/export:FreeResource=kernel32.FreeResource")
#pragma comment(linker, "/export:FreeUserPhysicalPages=kernel32.FreeUserPhysicalPages")
#pragma comment(linker, "/export:GenerateConsoleCtrlEvent=kernel32.GenerateConsoleCtrlEvent")
#pragma comment(linker, "/export:GetACP=kernel32.GetACP")
#pragma comment(linker, "/export:GetActiveProcessorCount=kernel32.GetActiveProcessorCount")
#pragma comment(linker, "/export:GetActiveProcessorGroupCount=kernel32.GetActiveProcessorGroupCount")
#pragma comment(linker, "/export:GetApplicationRecoveryCallback=kernel32.GetApplicationRecoveryCallback")
#pragma comment(linker, "/export:GetApplicationRestartSettings=kernel32.GetApplicationRestartSettings")
#pragma comment(linker, "/export:GetAtomNameA=kernel32.GetAtomNameA")
#pragma comment(linker, "/export:GetAtomNameW=kernel32.GetAtomNameW")
#pragma comment(linker, "/export:GetBinaryType=kernel32.GetBinaryType")
#pragma comment(linker, "/export:GetBinaryTypeA=kernel32.GetBinaryTypeA")
#pragma comment(linker, "/export:GetBinaryTypeW=kernel32.GetBinaryTypeW")
#pragma comment(linker, "/export:GetCPInfo=kernel32.GetCPInfo")
#pragma comment(linker, "/export:GetCPInfoExA=kernel32.GetCPInfoExA")
#pragma comment(linker, "/export:GetCPInfoExW=kernel32.GetCPInfoExW")
#pragma comment(linker, "/export:GetCalendarDateFormat=kernel32.GetCalendarDateFormat")
#pragma comment(linker, "/export:GetCalendarDateFormatEx=kernel32.GetCalendarDateFormatEx")
#pragma comment(linker, "/export:GetCalendarDaysInMonth=kernel32.GetCalendarDaysInMonth")
#pragma comment(linker, "/export:GetCalendarDifferenceInDays=kernel32.GetCalendarDifferenceInDays")
#pragma comment(linker, "/export:GetCalendarInfoA=kernel32.GetCalendarInfoA")
#pragma comment(linker, "/export:GetCalendarInfoEx=kernel32.GetCalendarInfoEx")
#pragma comment(linker, "/export:GetCalendarInfoW=kernel32.GetCalendarInfoW")
#pragma comment(linker, "/export:GetCalendarMonthsInYear=kernel32.GetCalendarMonthsInYear")
#pragma comment(linker, "/export:GetCalendarSupportedDateRange=kernel32.GetCalendarSupportedDateRange")
#pragma comment(linker, "/export:GetCalendarWeekNumber=kernel32.GetCalendarWeekNumber")
#pragma comment(linker, "/export:GetComPlusPackageInstallStatus=kernel32.GetComPlusPackageInstallStatus")
#pragma comment(linker, "/export:GetCommConfig=kernel32.GetCommConfig")
#pragma comment(linker, "/export:GetCommMask=kernel32.GetCommMask")
#pragma comment(linker, "/export:GetCommModemStatus=kernel32.GetCommModemStatus")
#pragma comment(linker, "/export:GetCommProperties=kernel32.GetCommProperties")
#pragma comment(linker, "/export:GetCommState=kernel32.GetCommState")
#pragma comment(linker, "/export:GetCommTimeouts=kernel32.GetCommTimeouts")
#pragma comment(linker, "/export:GetCommandLineA=kernel32.GetCommandLineA")
#pragma comment(linker, "/export:GetCommandLineW=kernel32.GetCommandLineW")
#pragma comment(linker, "/export:GetCompressedFileSizeA=kernel32.GetCompressedFileSizeA")
#pragma comment(linker, "/export:GetCompressedFileSizeTransactedA=kernel32.GetCompressedFileSizeTransactedA")
#pragma comment(linker, "/export:GetCompressedFileSizeTransactedW=kernel32.GetCompressedFileSizeTransactedW")
#pragma comment(linker, "/export:GetCompressedFileSizeW=kernel32.GetCompressedFileSizeW")
#pragma comment(linker, "/export:GetComputerNameA=kernel32.GetComputerNameA")
#pragma comment(linker, "/export:GetComputerNameExA=kernel32.GetComputerNameExA")
#pragma comment(linker, "/export:GetComputerNameExW=kernel32.GetComputerNameExW")
#pragma comment(linker, "/export:GetComputerNameW=kernel32.GetComputerNameW")
#pragma comment(linker, "/export:GetConsoleAliasA=kernel32.GetConsoleAliasA")
#pragma comment(linker, "/export:GetConsoleAliasExesA=kernel32.GetConsoleAliasExesA")
#pragma comment(linker, "/export:GetConsoleAliasExesLengthA=kernel32.GetConsoleAliasExesLengthA")
#pragma comment(linker, "/export:GetConsoleAliasExesLengthW=kernel32.GetConsoleAliasExesLengthW")
#pragma comment(linker, "/export:GetConsoleAliasExesW=kernel32.GetConsoleAliasExesW")
#pragma comment(linker, "/export:GetConsoleAliasW=kernel32.GetConsoleAliasW")
#pragma comment(linker, "/export:GetConsoleAliasesA=kernel32.GetConsoleAliasesA")
#pragma comment(linker, "/export:GetConsoleAliasesLengthA=kernel32.GetConsoleAliasesLengthA")
#pragma comment(linker, "/export:GetConsoleAliasesLengthW=kernel32.GetConsoleAliasesLengthW")
#pragma comment(linker, "/export:GetConsoleAliasesW=kernel32.GetConsoleAliasesW")
#pragma comment(linker, "/export:GetConsoleCP=kernel32.GetConsoleCP")
#pragma comment(linker, "/export:GetConsoleCharType=kernel32.GetConsoleCharType")
#pragma comment(linker, "/export:GetConsoleCommandHistoryA=kernel32.GetConsoleCommandHistoryA")
#pragma comment(linker, "/export:GetConsoleCommandHistoryLengthA=kernel32.GetConsoleCommandHistoryLengthA")
#pragma comment(linker, "/export:GetConsoleCommandHistoryLengthW=kernel32.GetConsoleCommandHistoryLengthW")
#pragma comment(linker, "/export:GetConsoleCommandHistoryW=kernel32.GetConsoleCommandHistoryW")
#pragma comment(linker, "/export:GetConsoleCursorInfo=kernel32.GetConsoleCursorInfo")
#pragma comment(linker, "/export:GetConsoleCursorMode=kernel32.GetConsoleCursorMode")
#pragma comment(linker, "/export:GetConsoleDisplayMode=kernel32.GetConsoleDisplayMode")
#pragma comment(linker, "/export:GetConsoleFontInfo=kernel32.GetConsoleFontInfo")
#pragma comment(linker, "/export:GetConsoleFontSize=kernel32.GetConsoleFontSize")
#pragma comment(linker, "/export:GetConsoleHardwareState=kernel32.GetConsoleHardwareState")
#pragma comment(linker, "/export:GetConsoleHistoryInfo=kernel32.GetConsoleHistoryInfo")
#pragma comment(linker, "/export:GetConsoleInputExeNameA=kernel32.GetConsoleInputExeNameA")
#pragma comment(linker, "/export:GetConsoleInputExeNameW=kernel32.GetConsoleInputExeNameW")
#pragma comment(linker, "/export:GetConsoleInputWaitHandle=kernel32.GetConsoleInputWaitHandle")
#pragma comment(linker, "/export:GetConsoleKeyboardLayoutNameA=kernel32.GetConsoleKeyboardLayoutNameA")
#pragma comment(linker, "/export:GetConsoleKeyboardLayoutNameW=kernel32.GetConsoleKeyboardLayoutNameW")
#pragma comment(linker, "/export:GetConsoleMode=kernel32.GetConsoleMode")
#pragma comment(linker, "/export:GetConsoleNlsMode=kernel32.GetConsoleNlsMode")
#pragma comment(linker, "/export:GetConsoleOriginalTitleA=kernel32.GetConsoleOriginalTitleA")
#pragma comment(linker, "/export:GetConsoleOriginalTitleW=kernel32.GetConsoleOriginalTitleW")
#pragma comment(linker, "/export:GetConsoleOutputCP=kernel32.GetConsoleOutputCP")
#pragma comment(linker, "/export:GetConsoleProcessList=kernel32.GetConsoleProcessList")
#pragma comment(linker, "/export:GetConsoleScreenBufferInfo=kernel32.GetConsoleScreenBufferInfo")
#pragma comment(linker, "/export:GetConsoleScreenBufferInfoEx=kernel32.GetConsoleScreenBufferInfoEx")
#pragma comment(linker, "/export:GetConsoleSelectionInfo=kernel32.GetConsoleSelectionInfo")
#pragma comment(linker, "/export:GetConsoleTitleA=kernel32.GetConsoleTitleA")
#pragma comment(linker, "/export:GetConsoleTitleW=kernel32.GetConsoleTitleW")
#pragma comment(linker, "/export:GetConsoleWindow=kernel32.GetConsoleWindow")
#pragma comment(linker, "/export:GetCurrencyFormatA=kernel32.GetCurrencyFormatA")
#pragma comment(linker, "/export:GetCurrencyFormatEx=kernel32.GetCurrencyFormatEx")
#pragma comment(linker, "/export:GetCurrencyFormatW=kernel32.GetCurrencyFormatW")
#pragma comment(linker, "/export:GetCurrentActCtx=kernel32.GetCurrentActCtx")
#pragma comment(linker, "/export:GetCurrentConsoleFont=kernel32.GetCurrentConsoleFont")
#pragma comment(linker, "/export:GetCurrentConsoleFontEx=kernel32.GetCurrentConsoleFontEx")
#pragma comment(linker, "/export:GetCurrentDirectoryA=kernel32.GetCurrentDirectoryA")
#pragma comment(linker, "/export:GetCurrentDirectoryW=kernel32.GetCurrentDirectoryW")
#pragma comment(linker, "/export:GetCurrentProcess=kernel32.GetCurrentProcess")
#pragma comment(linker, "/export:GetCurrentProcessId=kernel32.GetCurrentProcessId")
#pragma comment(linker, "/export:GetCurrentProcessorNumber=kernel32.GetCurrentProcessorNumber")
#pragma comment(linker, "/export:GetCurrentProcessorNumberEx=kernel32.GetCurrentProcessorNumberEx")
#pragma comment(linker, "/export:GetCurrentThread=kernel32.GetCurrentThread")
#pragma comment(linker, "/export:GetCurrentThreadId=kernel32.GetCurrentThreadId")
#pragma comment(linker, "/export:GetDateFormatA=kernel32.GetDateFormatA")
#pragma comment(linker, "/export:GetDateFormatEx=kernel32.GetDateFormatEx")
#pragma comment(linker, "/export:GetDateFormatW=kernel32.GetDateFormatW")
#pragma comment(linker, "/export:GetDefaultCommConfigA=kernel32.GetDefaultCommConfigA")
#pragma comment(linker, "/export:GetDefaultCommConfigW=kernel32.GetDefaultCommConfigW")
#pragma comment(linker, "/export:GetDevicePowerState=kernel32.GetDevicePowerState")
#pragma comment(linker, "/export:GetDiskFreeSpaceA=kernel32.GetDiskFreeSpaceA")
#pragma comment(linker, "/export:GetDiskFreeSpaceExA=kernel32.GetDiskFreeSpaceExA")
#pragma comment(linker, "/export:GetDiskFreeSpaceExW=kernel32.GetDiskFreeSpaceExW")
#pragma comment(linker, "/export:GetDiskFreeSpaceW=kernel32.GetDiskFreeSpaceW")
#pragma comment(linker, "/export:GetDllDirectoryA=kernel32.GetDllDirectoryA")
#pragma comment(linker, "/export:GetDllDirectoryW=kernel32.GetDllDirectoryW")
#pragma comment(linker, "/export:GetDriveTypeA=kernel32.GetDriveTypeA")
#pragma comment(linker, "/export:GetDriveTypeW=kernel32.GetDriveTypeW")
#pragma comment(linker, "/export:GetDurationFormat=kernel32.GetDurationFormat")
#pragma comment(linker, "/export:GetDurationFormatEx=kernel32.GetDurationFormatEx")
#pragma comment(linker, "/export:GetDynamicTimeZoneInformation=kernel32.GetDynamicTimeZoneInformation")
#pragma comment(linker, "/export:GetEnabledExtendedFeatures=kernel32.GetEnabledExtendedFeatures")
#pragma comment(linker, "/export:GetEnvironmentStrings=kernel32.GetEnvironmentStrings")
#pragma comment(linker, "/export:GetEnvironmentStringsA=kernel32.GetEnvironmentStringsA")
#pragma comment(linker, "/export:GetEnvironmentStringsW=kernel32.GetEnvironmentStringsW")
#pragma comment(linker, "/export:GetEnvironmentVariableA=kernel32.GetEnvironmentVariableA")
#pragma comment(linker, "/export:GetEnvironmentVariableW=kernel32.GetEnvironmentVariableW")
#pragma comment(linker, "/export:GetEraNameCountedString=kernel32.GetEraNameCountedString")
#pragma comment(linker, "/export:GetErrorMode=kernel32.GetErrorMode")
#pragma comment(linker, "/export:GetExitCodeProcess=kernel32.GetExitCodeProcess")
#pragma comment(linker, "/export:GetExitCodeThread=kernel32.GetExitCodeThread")
#pragma comment(linker, "/export:GetExpandedNameA=kernel32.GetExpandedNameA")
#pragma comment(linker, "/export:GetExpandedNameW=kernel32.GetExpandedNameW")
#pragma comment(linker, "/export:GetExtendedContextLength=kernel32.GetExtendedContextLength")
#pragma comment(linker, "/export:GetExtendedFeaturesMask=kernel32.GetExtendedFeaturesMask")
#pragma comment(linker, "/export:GetFileAttributesA=kernel32.GetFileAttributesA")
#pragma comment(linker, "/export:GetFileAttributesExA=kernel32.GetFileAttributesExA")
#pragma comment(linker, "/export:GetFileAttributesExW=kernel32.GetFileAttributesExW")
#pragma comment(linker, "/export:GetFileAttributesTransactedA=kernel32.GetFileAttributesTransactedA")
#pragma comment(linker, "/export:GetFileAttributesTransactedW=kernel32.GetFileAttributesTransactedW")
#pragma comment(linker, "/export:GetFileAttributesW=kernel32.GetFileAttributesW")
#pragma comment(linker, "/export:GetFileBandwidthReservation=kernel32.GetFileBandwidthReservation")
#pragma comment(linker, "/export:GetFileInformationByHandle=kernel32.GetFileInformationByHandle")
#pragma comment(linker, "/export:GetFileInformationByHandleEx=kernel32.GetFileInformationByHandleEx")
#pragma comment(linker, "/export:GetFileMUIInfo=kernel32.GetFileMUIInfo")
#pragma comment(linker, "/export:GetFileMUIPath=kernel32.GetFileMUIPath")
#pragma comment(linker, "/export:GetFileSize=kernel32.GetFileSize")
#pragma comment(linker, "/export:GetFileSizeEx=kernel32.GetFileSizeEx")
#pragma comment(linker, "/export:GetFileTime=kernel32.GetFileTime")
#pragma comment(linker, "/export:GetFileType=kernel32.GetFileType")
#pragma comment(linker, "/export:GetFinalPathNameByHandleA=kernel32.GetFinalPathNameByHandleA")
#pragma comment(linker, "/export:GetFinalPathNameByHandleW=kernel32.GetFinalPathNameByHandleW")
#pragma comment(linker, "/export:GetFirmwareEnvironmentVariableA=kernel32.GetFirmwareEnvironmentVariableA")
#pragma comment(linker, "/export:GetFirmwareEnvironmentVariableW=kernel32.GetFirmwareEnvironmentVariableW")
#pragma comment(linker, "/export:GetFullPathNameA=kernel32.GetFullPathNameA")
#pragma comment(linker, "/export:GetFullPathNameTransactedA=kernel32.GetFullPathNameTransactedA")
#pragma comment(linker, "/export:GetFullPathNameTransactedW=kernel32.GetFullPathNameTransactedW")
#pragma comment(linker, "/export:GetFullPathNameW=kernel32.GetFullPathNameW")
#pragma comment(linker, "/export:GetGeoInfoA=kernel32.GetGeoInfoA")
#pragma comment(linker, "/export:GetGeoInfoW=kernel32.GetGeoInfoW")
#pragma comment(linker, "/export:GetHandleContext=kernel32.GetHandleContext")
#pragma comment(linker, "/export:GetHandleInformation=kernel32.GetHandleInformation")
#pragma comment(linker, "/export:GetLargePageMinimum=kernel32.GetLargePageMinimum")
#pragma comment(linker, "/export:GetLargestConsoleWindowSize=kernel32.GetLargestConsoleWindowSize")
#pragma comment(linker, "/export:GetLastError=kernel32.GetLastError")
#pragma comment(linker, "/export:GetLocalTime=kernel32.GetLocalTime")
#pragma comment(linker, "/export:GetLocaleInfoA=kernel32.GetLocaleInfoA")
#pragma comment(linker, "/export:GetLocaleInfoEx=kernel32.GetLocaleInfoEx")
#pragma comment(linker, "/export:GetLocaleInfoW=kernel32.GetLocaleInfoW")
#pragma comment(linker, "/export:GetLogicalDriveStringsA=kernel32.GetLogicalDriveStringsA")
#pragma comment(linker, "/export:GetLogicalDriveStringsW=kernel32.GetLogicalDriveStringsW")
#pragma comment(linker, "/export:GetLogicalDrives=kernel32.GetLogicalDrives")
#pragma comment(linker, "/export:GetLogicalProcessorInformation=kernel32.GetLogicalProcessorInformation")
#pragma comment(linker, "/export:GetLogicalProcessorInformationEx=kernel32.GetLogicalProcessorInformationEx")
#pragma comment(linker, "/export:GetLongPathNameA=kernel32.GetLongPathNameA")
#pragma comment(linker, "/export:GetLongPathNameTransactedA=kernel32.GetLongPathNameTransactedA")
#pragma comment(linker, "/export:GetLongPathNameTransactedW=kernel32.GetLongPathNameTransactedW")
#pragma comment(linker, "/export:GetLongPathNameW=kernel32.GetLongPathNameW")
#pragma comment(linker, "/export:GetMailslotInfo=kernel32.GetMailslotInfo")
#pragma comment(linker, "/export:GetMaximumProcessorCount=kernel32.GetMaximumProcessorCount")
#pragma comment(linker, "/export:GetMaximumProcessorGroupCount=kernel32.GetMaximumProcessorGroupCount")
#pragma comment(linker, "/export:GetModuleFileNameA=kernel32.GetModuleFileNameA")
#pragma comment(linker, "/export:GetModuleFileNameW=kernel32.GetModuleFileNameW")
#pragma comment(linker, "/export:GetModuleHandleA=kernel32.GetModuleHandleA")
#pragma comment(linker, "/export:GetModuleHandleExA=kernel32.GetModuleHandleExA")
#pragma comment(linker, "/export:GetModuleHandleExW=kernel32.GetModuleHandleExW")
#pragma comment(linker, "/export:GetModuleHandleW=kernel32.GetModuleHandleW")
#pragma comment(linker, "/export:GetNLSVersion=kernel32.GetNLSVersion")
#pragma comment(linker, "/export:GetNLSVersionEx=kernel32.GetNLSVersionEx")
#pragma comment(linker, "/export:GetNamedPipeAttribute=kernel32.GetNamedPipeAttribute")
#pragma comment(linker, "/export:GetNamedPipeClientComputerNameA=kernel32.GetNamedPipeClientComputerNameA")
#pragma comment(linker, "/export:GetNamedPipeClientComputerNameW=kernel32.GetNamedPipeClientComputerNameW")
#pragma comment(linker, "/export:GetNamedPipeClientProcessId=kernel32.GetNamedPipeClientProcessId")
#pragma comment(linker, "/export:GetNamedPipeClientSessionId=kernel32.GetNamedPipeClientSessionId")
#pragma comment(linker, "/export:GetNamedPipeHandleStateA=kernel32.GetNamedPipeHandleStateA")
#pragma comment(linker, "/export:GetNamedPipeHandleStateW=kernel32.GetNamedPipeHandleStateW")
#pragma comment(linker, "/export:GetNamedPipeInfo=kernel32.GetNamedPipeInfo")
#pragma comment(linker, "/export:GetNamedPipeServerProcessId=kernel32.GetNamedPipeServerProcessId")
#pragma comment(linker, "/export:GetNamedPipeServerSessionId=kernel32.GetNamedPipeServerSessionId")
#pragma comment(linker, "/export:GetNativeSystemInfo=kernel32.GetNativeSystemInfo")
#pragma comment(linker, "/export:GetNextVDMCommand=kernel32.GetNextVDMCommand")
#pragma comment(linker, "/export:GetNumaAvailableMemoryNode=kernel32.GetNumaAvailableMemoryNode")
#pragma comment(linker, "/export:GetNumaAvailableMemoryNodeEx=kernel32.GetNumaAvailableMemoryNodeEx")
#pragma comment(linker, "/export:GetNumaHighestNodeNumber=kernel32.GetNumaHighestNodeNumber")
#pragma comment(linker, "/export:GetNumaNodeNumberFromHandle=kernel32.GetNumaNodeNumberFromHandle")
#pragma comment(linker, "/export:GetNumaNodeProcessorMask=kernel32.GetNumaNodeProcessorMask")
#pragma comment(linker, "/export:GetNumaNodeProcessorMaskEx=kernel32.GetNumaNodeProcessorMaskEx")
#pragma comment(linker, "/export:GetNumaProcessorNode=kernel32.GetNumaProcessorNode")
#pragma comment(linker, "/export:GetNumaProcessorNodeEx=kernel32.GetNumaProcessorNodeEx")
#pragma comment(linker, "/export:GetNumaProximityNode=kernel32.GetNumaProximityNode")
#pragma comment(linker, "/export:GetNumaProximityNodeEx=kernel32.GetNumaProximityNodeEx")
#pragma comment(linker, "/export:GetNumberFormatA=kernel32.GetNumberFormatA")
#pragma comment(linker, "/export:GetNumberFormatEx=kernel32.GetNumberFormatEx")
#pragma comment(linker, "/export:GetNumberFormatW=kernel32.GetNumberFormatW")
#pragma comment(linker, "/export:GetNumberOfConsoleFonts=kernel32.GetNumberOfConsoleFonts")
#pragma comment(linker, "/export:GetNumberOfConsoleInputEvents=kernel32.GetNumberOfConsoleInputEvents")
#pragma comment(linker, "/export:GetNumberOfConsoleMouseButtons=kernel32.GetNumberOfConsoleMouseButtons")
#pragma comment(linker, "/export:GetOEMCP=kernel32.GetOEMCP")
#pragma comment(linker, "/export:GetOverlappedResult=kernel32.GetOverlappedResult")
#pragma comment(linker, "/export:GetPhysicallyInstalledSystemMemory=kernel32.GetPhysicallyInstalledSystemMemory")
#pragma comment(linker, "/export:GetPriorityClass=kernel32.GetPriorityClass")
#pragma comment(linker, "/export:GetPrivateProfileIntA=kernel32.GetPrivateProfileIntA")
#pragma comment(linker, "/export:GetPrivateProfileIntW=kernel32.GetPrivateProfileIntW")
#pragma comment(linker, "/export:GetPrivateProfileSectionA=kernel32.GetPrivateProfileSectionA")
#pragma comment(linker, "/export:GetPrivateProfileSectionNamesA=kernel32.GetPrivateProfileSectionNamesA")
#pragma comment(linker, "/export:GetPrivateProfileSectionNamesW=kernel32.GetPrivateProfileSectionNamesW")
#pragma comment(linker, "/export:GetPrivateProfileSectionW=kernel32.GetPrivateProfileSectionW")
#pragma comment(linker, "/export:GetPrivateProfileStringA=kernel32.GetPrivateProfileStringA")
#pragma comment(linker, "/export:GetPrivateProfileStringW=kernel32.GetPrivateProfileStringW")
#pragma comment(linker, "/export:GetPrivateProfileStructA=kernel32.GetPrivateProfileStructA")
#pragma comment(linker, "/export:GetPrivateProfileStructW=kernel32.GetPrivateProfileStructW")
#pragma comment(linker, "/export:GetProcAddress=kernel32.GetProcAddress")
#pragma comment(linker, "/export:GetProcessAffinityMask=kernel32.GetProcessAffinityMask")
#pragma comment(linker, "/export:GetProcessDEPPolicy=kernel32.GetProcessDEPPolicy")
#pragma comment(linker, "/export:GetProcessGroupAffinity=kernel32.GetProcessGroupAffinity")
#pragma comment(linker, "/export:GetProcessHandleCount=kernel32.GetProcessHandleCount")
#pragma comment(linker, "/export:GetProcessHeap=kernel32.GetProcessHeap")
#pragma comment(linker, "/export:GetProcessHeaps=kernel32.GetProcessHeaps")
#pragma comment(linker, "/export:GetProcessId=kernel32.GetProcessId")
#pragma comment(linker, "/export:GetProcessIdOfThread=kernel32.GetProcessIdOfThread")
#pragma comment(linker, "/export:GetProcessIoCounters=kernel32.GetProcessIoCounters")
#pragma comment(linker, "/export:GetProcessPreferredUILanguages=kernel32.GetProcessPreferredUILanguages")
#pragma comment(linker, "/export:GetProcessPriorityBoost=kernel32.GetProcessPriorityBoost")
#pragma comment(linker, "/export:GetProcessShutdownParameters=kernel32.GetProcessShutdownParameters")
#pragma comment(linker, "/export:GetProcessTimes=kernel32.GetProcessTimes")
#pragma comment(linker, "/export:GetProcessVersion=kernel32.GetProcessVersion")
#pragma comment(linker, "/export:GetProcessWorkingSetSize=kernel32.GetProcessWorkingSetSize")
#pragma comment(linker, "/export:GetProcessWorkingSetSizeEx=kernel32.GetProcessWorkingSetSizeEx")
#pragma comment(linker, "/export:GetProcessorSystemCycleTime=kernel32.GetProcessorSystemCycleTime")
#pragma comment(linker, "/export:GetProductInfo=kernel32.GetProductInfo")
#pragma comment(linker, "/export:GetProfileIntA=kernel32.GetProfileIntA")
#pragma comment(linker, "/export:GetProfileIntW=kernel32.GetProfileIntW")
#pragma comment(linker, "/export:GetProfileSectionA=kernel32.GetProfileSectionA")
#pragma comment(linker, "/export:GetProfileSectionW=kernel32.GetProfileSectionW")
#pragma comment(linker, "/export:GetProfileStringA=kernel32.GetProfileStringA")
#pragma comment(linker, "/export:GetProfileStringW=kernel32.GetProfileStringW")
#pragma comment(linker, "/export:GetQueuedCompletionStatus=kernel32.GetQueuedCompletionStatus")
#pragma comment(linker, "/export:GetQueuedCompletionStatusEx=kernel32.GetQueuedCompletionStatusEx")
#pragma comment(linker, "/export:GetShortPathNameA=kernel32.GetShortPathNameA")
#pragma comment(linker, "/export:GetShortPathNameW=kernel32.GetShortPathNameW")
#pragma comment(linker, "/export:GetStartupInfoA=kernel32.GetStartupInfoA")
#pragma comment(linker, "/export:GetStartupInfoW=kernel32.GetStartupInfoW")
#pragma comment(linker, "/export:GetStdHandle=kernel32.GetStdHandle")
#pragma comment(linker, "/export:GetStringScripts=kernel32.GetStringScripts")
#pragma comment(linker, "/export:GetStringTypeA=kernel32.GetStringTypeA")
#pragma comment(linker, "/export:GetStringTypeExA=kernel32.GetStringTypeExA")
#pragma comment(linker, "/export:GetStringTypeExW=kernel32.GetStringTypeExW")
#pragma comment(linker, "/export:GetStringTypeW=kernel32.GetStringTypeW")
#pragma comment(linker, "/export:GetSystemDEPPolicy=kernel32.GetSystemDEPPolicy")
#pragma comment(linker, "/export:GetSystemDefaultLCID=kernel32.GetSystemDefaultLCID")
#pragma comment(linker, "/export:GetSystemDefaultLangID=kernel32.GetSystemDefaultLangID")
#pragma comment(linker, "/export:GetSystemDefaultLocaleName=kernel32.GetSystemDefaultLocaleName")
#pragma comment(linker, "/export:GetSystemDefaultUILanguage=kernel32.GetSystemDefaultUILanguage")
#pragma comment(linker, "/export:GetSystemDirectoryA=kernel32.GetSystemDirectoryA")
#pragma comment(linker, "/export:GetSystemDirectoryW=kernel32.GetSystemDirectoryW")
#pragma comment(linker, "/export:GetSystemFileCacheSize=kernel32.GetSystemFileCacheSize")
#pragma comment(linker, "/export:GetSystemFirmwareTable=kernel32.GetSystemFirmwareTable")
#pragma comment(linker, "/export:GetSystemInfo=kernel32.GetSystemInfo")
#pragma comment(linker, "/export:GetSystemPowerStatus=kernel32.GetSystemPowerStatus")
#pragma comment(linker, "/export:GetSystemPreferredUILanguages=kernel32.GetSystemPreferredUILanguages")
#pragma comment(linker, "/export:GetSystemRegistryQuota=kernel32.GetSystemRegistryQuota")
#pragma comment(linker, "/export:GetSystemTime=kernel32.GetSystemTime")
#pragma comment(linker, "/export:GetSystemTimeAdjustment=kernel32.GetSystemTimeAdjustment")
#pragma comment(linker, "/export:GetSystemTimeAsFileTime=kernel32.GetSystemTimeAsFileTime")
#pragma comment(linker, "/export:GetSystemTimes=kernel32.GetSystemTimes")
#pragma comment(linker, "/export:GetSystemWindowsDirectoryA=kernel32.GetSystemWindowsDirectoryA")
#pragma comment(linker, "/export:GetSystemWindowsDirectoryW=kernel32.GetSystemWindowsDirectoryW")
#pragma comment(linker, "/export:GetSystemWow64DirectoryA=kernel32.GetSystemWow64DirectoryA")
#pragma comment(linker, "/export:GetSystemWow64DirectoryW=kernel32.GetSystemWow64DirectoryW")
#pragma comment(linker, "/export:GetTapeParameters=kernel32.GetTapeParameters")
#pragma comment(linker, "/export:GetTapePosition=kernel32.GetTapePosition")
#pragma comment(linker, "/export:GetTapeStatus=kernel32.GetTapeStatus")
#pragma comment(linker, "/export:GetTempFileNameA=kernel32.GetTempFileNameA")
#pragma comment(linker, "/export:GetTempFileNameW=kernel32.GetTempFileNameW")
#pragma comment(linker, "/export:GetTempPathA=kernel32.GetTempPathA")
#pragma comment(linker, "/export:GetTempPathW=kernel32.GetTempPathW")
#pragma comment(linker, "/export:GetThreadContext=kernel32.GetThreadContext")
#pragma comment(linker, "/export:GetThreadErrorMode=kernel32.GetThreadErrorMode")
#pragma comment(linker, "/export:GetThreadGroupAffinity=kernel32.GetThreadGroupAffinity")
#pragma comment(linker, "/export:GetThreadIOPendingFlag=kernel32.GetThreadIOPendingFlag")
#pragma comment(linker, "/export:GetThreadId=kernel32.GetThreadId")
#pragma comment(linker, "/export:GetThreadIdealProcessorEx=kernel32.GetThreadIdealProcessorEx")
#pragma comment(linker, "/export:GetThreadLocale=kernel32.GetThreadLocale")
#pragma comment(linker, "/export:GetThreadPreferredUILanguages=kernel32.GetThreadPreferredUILanguages")
#pragma comment(linker, "/export:GetThreadPriority=kernel32.GetThreadPriority")
#pragma comment(linker, "/export:GetThreadPriorityBoost=kernel32.GetThreadPriorityBoost")
#pragma comment(linker, "/export:GetThreadSelectorEntry=kernel32.GetThreadSelectorEntry")
#pragma comment(linker, "/export:GetThreadTimes=kernel32.GetThreadTimes")
#pragma comment(linker, "/export:GetThreadUILanguage=kernel32.GetThreadUILanguage")
#pragma comment(linker, "/export:GetTickCount=kernel32.GetTickCount")
#pragma comment(linker, "/export:GetTickCount64=kernel32.GetTickCount64")
#pragma comment(linker, "/export:GetTimeFormatA=kernel32.GetTimeFormatA")
#pragma comment(linker, "/export:GetTimeFormatEx=kernel32.GetTimeFormatEx")
#pragma comment(linker, "/export:GetTimeFormatW=kernel32.GetTimeFormatW")
#pragma comment(linker, "/export:GetTimeZoneInformation=kernel32.GetTimeZoneInformation")
#pragma comment(linker, "/export:GetTimeZoneInformationForYear=kernel32.GetTimeZoneInformationForYear")
#pragma comment(linker, "/export:GetUILanguageInfo=kernel32.GetUILanguageInfo")
#pragma comment(linker, "/export:GetUserDefaultLCID=kernel32.GetUserDefaultLCID")
#pragma comment(linker, "/export:GetUserDefaultLangID=kernel32.GetUserDefaultLangID")
#pragma comment(linker, "/export:GetUserDefaultLocaleName=kernel32.GetUserDefaultLocaleName")
#pragma comment(linker, "/export:GetUserDefaultUILanguage=kernel32.GetUserDefaultUILanguage")
#pragma comment(linker, "/export:GetUserGeoID=kernel32.GetUserGeoID")
#pragma comment(linker, "/export:GetUserPreferredUILanguages=kernel32.GetUserPreferredUILanguages")
#pragma comment(linker, "/export:GetVDMCurrentDirectories=kernel32.GetVDMCurrentDirectories")
#pragma comment(linker, "/export:GetVersion=kernel32.GetVersion")
#pragma comment(linker, "/export:GetVersionExA=kernel32.GetVersionExA")
#pragma comment(linker, "/export:GetVersionExW=kernel32.GetVersionExW")
#pragma comment(linker, "/export:GetVolumeInformationA=kernel32.GetVolumeInformationA")
#pragma comment(linker, "/export:GetVolumeInformationByHandleW=kernel32.GetVolumeInformationByHandleW")
#pragma comment(linker, "/export:GetVolumeInformationW=kernel32.GetVolumeInformationW")
#pragma comment(linker, "/export:GetVolumeNameForVolumeMountPointA=kernel32.GetVolumeNameForVolumeMountPointA")
#pragma comment(linker, "/export:GetVolumeNameForVolumeMountPointW=kernel32.GetVolumeNameForVolumeMountPointW")
#pragma comment(linker, "/export:GetVolumePathNameA=kernel32.GetVolumePathNameA")
#pragma comment(linker, "/export:GetVolumePathNameW=kernel32.GetVolumePathNameW")
#pragma comment(linker, "/export:GetVolumePathNamesForVolumeNameA=kernel32.GetVolumePathNamesForVolumeNameA")
#pragma comment(linker, "/export:GetVolumePathNamesForVolumeNameW=kernel32.GetVolumePathNamesForVolumeNameW")
#pragma comment(linker, "/export:GetWindowsDirectoryA=kernel32.GetWindowsDirectoryA")
#pragma comment(linker, "/export:GetWindowsDirectoryW=kernel32.GetWindowsDirectoryW")
#pragma comment(linker, "/export:GetWriteWatch=kernel32.GetWriteWatch")
#pragma comment(linker, "/export:GlobalAddAtomA=kernel32.GlobalAddAtomA")
#pragma comment(linker, "/export:GlobalAddAtomW=kernel32.GlobalAddAtomW")
#pragma comment(linker, "/export:GlobalAlloc=kernel32.GlobalAlloc")
#pragma comment(linker, "/export:GlobalCompact=kernel32.GlobalCompact")
#pragma comment(linker, "/export:GlobalDeleteAtom=kernel32.GlobalDeleteAtom")
#pragma comment(linker, "/export:GlobalFindAtomA=kernel32.GlobalFindAtomA")
#pragma comment(linker, "/export:GlobalFindAtomW=kernel32.GlobalFindAtomW")
#pragma comment(linker, "/export:GlobalFix=kernel32.GlobalFix")
#pragma comment(linker, "/export:GlobalFlags=kernel32.GlobalFlags")
#pragma comment(linker, "/export:GlobalFree=kernel32.GlobalFree")
#pragma comment(linker, "/export:GlobalGetAtomNameA=kernel32.GlobalGetAtomNameA")
#pragma comment(linker, "/export:GlobalGetAtomNameW=kernel32.GlobalGetAtomNameW")
#pragma comment(linker, "/export:GlobalHandle=kernel32.GlobalHandle")
#pragma comment(linker, "/export:GlobalLock=kernel32.GlobalLock")
#pragma comment(linker, "/export:GlobalMemoryStatus=kernel32.GlobalMemoryStatus")
#pragma comment(linker, "/export:GlobalMemoryStatusEx=kernel32.GlobalMemoryStatusEx")
#pragma comment(linker, "/export:GlobalReAlloc=kernel32.GlobalReAlloc")
#pragma comment(linker, "/export:GlobalSize=kernel32.GlobalSize")
#pragma comment(linker, "/export:GlobalUnWire=kernel32.GlobalUnWire")
#pragma comment(linker, "/export:GlobalUnfix=kernel32.GlobalUnfix")
#pragma comment(linker, "/export:GlobalUnlock=kernel32.GlobalUnlock")
#pragma comment(linker, "/export:GlobalWire=kernel32.GlobalWire")
#pragma comment(linker, "/export:Heap32First=kernel32.Heap32First")
#pragma comment(linker, "/export:Heap32ListFirst=kernel32.Heap32ListFirst")
#pragma comment(linker, "/export:Heap32ListNext=kernel32.Heap32ListNext")
#pragma comment(linker, "/export:Heap32Next=kernel32.Heap32Next")
#pragma comment(linker, "/export:HeapAlloc=kernel32.HeapAlloc")
#pragma comment(linker, "/export:HeapCompact=kernel32.HeapCompact")
#pragma comment(linker, "/export:HeapCreate=kernel32.HeapCreate")
#pragma comment(linker, "/export:HeapDestroy=kernel32.HeapDestroy")
#pragma comment(linker, "/export:HeapFree=kernel32.HeapFree")
#pragma comment(linker, "/export:HeapLock=kernel32.HeapLock")
#pragma comment(linker, "/export:HeapQueryInformation=kernel32.HeapQueryInformation")
#pragma comment(linker, "/export:HeapReAlloc=kernel32.HeapReAlloc")
#pragma comment(linker, "/export:HeapSetInformation=kernel32.HeapSetInformation")
#pragma comment(linker, "/export:HeapSize=kernel32.HeapSize")
#pragma comment(linker, "/export:HeapSummary=kernel32.HeapSummary")
#pragma comment(linker, "/export:HeapUnlock=kernel32.HeapUnlock")
#pragma comment(linker, "/export:HeapValidate=kernel32.HeapValidate")
#pragma comment(linker, "/export:HeapWalk=kernel32.HeapWalk")
#pragma comment(linker, "/export:IdnToAscii=kernel32.IdnToAscii")
#pragma comment(linker, "/export:IdnToNameprepUnicode=kernel32.IdnToNameprepUnicode")
#pragma comment(linker, "/export:IdnToUnicode=kernel32.IdnToUnicode")
#pragma comment(linker, "/export:InitAtomTable=kernel32.InitAtomTable")
#pragma comment(linker, "/export:InitOnceBeginInitialize=kernel32.InitOnceBeginInitialize")
#pragma comment(linker, "/export:InitOnceComplete=kernel32.InitOnceComplete")
#pragma comment(linker, "/export:InitOnceExecuteOnce=kernel32.InitOnceExecuteOnce")
#pragma comment(linker, "/export:InitOnceInitialize=kernel32.InitOnceInitialize")
#pragma comment(linker, "/export:InitializeConditionVariable=kernel32.InitializeConditionVariable")
#pragma comment(linker, "/export:InitializeCriticalSection=kernel32.InitializeCriticalSection")
#pragma comment(linker, "/export:InitializeCriticalSectionAndSpinCount=kernel32.InitializeCriticalSectionAndSpinCount")
#pragma comment(linker, "/export:InitializeCriticalSectionEx=kernel32.InitializeCriticalSectionEx")
#pragma comment(linker, "/export:InitializeExtendedContext=kernel32.InitializeExtendedContext")
#pragma comment(linker, "/export:InitializeProcThreadAttributeList=kernel32.InitializeProcThreadAttributeList")
#pragma comment(linker, "/export:InitializeSListHead=kernel32.InitializeSListHead")
#pragma comment(linker, "/export:InitializeSRWLock=kernel32.InitializeSRWLock")
#pragma comment(linker, "/export:InterlockedCompareExchange=kernel32.InterlockedCompareExchange")
#pragma comment(linker, "/export:InterlockedCompareExchange64=kernel32.InterlockedCompareExchange64")
#pragma comment(linker, "/export:InterlockedDecrement=kernel32.InterlockedDecrement")
#pragma comment(linker, "/export:InterlockedExchange=kernel32.InterlockedExchange")
#pragma comment(linker, "/export:InterlockedExchangeAdd=kernel32.InterlockedExchangeAdd")
#pragma comment(linker, "/export:InterlockedFlushSList=kernel32.InterlockedFlushSList")
#pragma comment(linker, "/export:InterlockedIncrement=kernel32.InterlockedIncrement")
#pragma comment(linker, "/export:InterlockedPopEntrySList=kernel32.InterlockedPopEntrySList")
#pragma comment(linker, "/export:InterlockedPushEntrySList=kernel32.InterlockedPushEntrySList")
#pragma comment(linker, "/export:InterlockedPushListSList=kernel32.InterlockedPushListSList")
#pragma comment(linker, "/export:InvalidateConsoleDIBits=kernel32.InvalidateConsoleDIBits")
#pragma comment(linker, "/export:IsBadCodePtr=kernel32.IsBadCodePtr")
#pragma comment(linker, "/export:IsBadHugeReadPtr=kernel32.IsBadHugeReadPtr")
#pragma comment(linker, "/export:IsBadHugeWritePtr=kernel32.IsBadHugeWritePtr")
#pragma comment(linker, "/export:IsBadReadPtr=kernel32.IsBadReadPtr")
#pragma comment(linker, "/export:IsBadStringPtrA=kernel32.IsBadStringPtrA")
#pragma comment(linker, "/export:IsBadStringPtrW=kernel32.IsBadStringPtrW")
#pragma comment(linker, "/export:IsBadWritePtr=kernel32.IsBadWritePtr")
#pragma comment(linker, "/export:IsCalendarLeapDay=kernel32.IsCalendarLeapDay")
#pragma comment(linker, "/export:IsCalendarLeapMonth=kernel32.IsCalendarLeapMonth")
#pragma comment(linker, "/export:IsCalendarLeapYear=kernel32.IsCalendarLeapYear")
#pragma comment(linker, "/export:IsDBCSLeadByte=kernel32.IsDBCSLeadByte")
#pragma comment(linker, "/export:IsDBCSLeadByteEx=kernel32.IsDBCSLeadByteEx")
#pragma comment(linker, "/export:IsDebuggerPresent=kernel32.IsDebuggerPresent")
#pragma comment(linker, "/export:IsNLSDefinedString=kernel32.IsNLSDefinedString")
#pragma comment(linker, "/export:IsNormalizedString=kernel32.IsNormalizedString")
#pragma comment(linker, "/export:IsProcessInJob=kernel32.IsProcessInJob")
#pragma comment(linker, "/export:IsProcessorFeaturePresent=kernel32.IsProcessorFeaturePresent")
#pragma comment(linker, "/export:IsSystemResumeAutomatic=kernel32.IsSystemResumeAutomatic")
#pragma comment(linker, "/export:IsThreadAFiber=kernel32.IsThreadAFiber")
#pragma comment(linker, "/export:IsThreadpoolTimerSet=kernel32.IsThreadpoolTimerSet")
#pragma comment(linker, "/export:IsTimeZoneRedirectionEnabled=kernel32.IsTimeZoneRedirectionEnabled")
#pragma comment(linker, "/export:IsValidCalDateTime=kernel32.IsValidCalDateTime")
#pragma comment(linker, "/export:IsValidCodePage=kernel32.IsValidCodePage")
#pragma comment(linker, "/export:IsValidLanguageGroup=kernel32.IsValidLanguageGroup")
#pragma comment(linker, "/export:IsValidLocale=kernel32.IsValidLocale")
#pragma comment(linker, "/export:IsValidLocaleName=kernel32.IsValidLocaleName")
#pragma comment(linker, "/export:IsWow64Process=kernel32.IsWow64Process")
#pragma comment(linker, "/export:K32EmptyWorkingSet=kernel32.K32EmptyWorkingSet")
#pragma comment(linker, "/export:K32EnumDeviceDrivers=kernel32.K32EnumDeviceDrivers")
#pragma comment(linker, "/export:K32EnumPageFilesA=kernel32.K32EnumPageFilesA")
#pragma comment(linker, "/export:K32EnumPageFilesW=kernel32.K32EnumPageFilesW")
#pragma comment(linker, "/export:K32EnumProcessModules=kernel32.K32EnumProcessModules")
#pragma comment(linker, "/export:K32EnumProcessModulesEx=kernel32.K32EnumProcessModulesEx")
#pragma comment(linker, "/export:K32EnumProcesses=kernel32.K32EnumProcesses")
#pragma comment(linker, "/export:K32GetDeviceDriverBaseNameA=kernel32.K32GetDeviceDriverBaseNameA")
#pragma comment(linker, "/export:K32GetDeviceDriverBaseNameW=kernel32.K32GetDeviceDriverBaseNameW")
#pragma comment(linker, "/export:K32GetDeviceDriverFileNameA=kernel32.K32GetDeviceDriverFileNameA")
#pragma comment(linker, "/export:K32GetDeviceDriverFileNameW=kernel32.K32GetDeviceDriverFileNameW")
#pragma comment(linker, "/export:K32GetMappedFileNameA=kernel32.K32GetMappedFileNameA")
#pragma comment(linker, "/export:K32GetMappedFileNameW=kernel32.K32GetMappedFileNameW")
#pragma comment(linker, "/export:K32GetModuleBaseNameA=kernel32.K32GetModuleBaseNameA")
#pragma comment(linker, "/export:K32GetModuleBaseNameW=kernel32.K32GetModuleBaseNameW")
#pragma comment(linker, "/export:K32GetModuleFileNameExA=kernel32.K32GetModuleFileNameExA")
#pragma comment(linker, "/export:K32GetModuleFileNameExW=kernel32.K32GetModuleFileNameExW")
#pragma comment(linker, "/export:K32GetModuleInformation=kernel32.K32GetModuleInformation")
#pragma comment(linker, "/export:K32GetPerformanceInfo=kernel32.K32GetPerformanceInfo")
#pragma comment(linker, "/export:K32GetProcessImageFileNameA=kernel32.K32GetProcessImageFileNameA")
#pragma comment(linker, "/export:K32GetProcessImageFileNameW=kernel32.K32GetProcessImageFileNameW")
#pragma comment(linker, "/export:K32GetProcessMemoryInfo=kernel32.K32GetProcessMemoryInfo")
#pragma comment(linker, "/export:K32GetWsChanges=kernel32.K32GetWsChanges")
#pragma comment(linker, "/export:K32GetWsChangesEx=kernel32.K32GetWsChangesEx")
#pragma comment(linker, "/export:K32InitializeProcessForWsWatch=kernel32.K32InitializeProcessForWsWatch")
#pragma comment(linker, "/export:K32QueryWorkingSet=kernel32.K32QueryWorkingSet")
#pragma comment(linker, "/export:K32QueryWorkingSetEx=kernel32.K32QueryWorkingSetEx")
#pragma comment(linker, "/export:LCIDToLocaleName=kernel32.LCIDToLocaleName")
#pragma comment(linker, "/export:LCMapStringA=kernel32.LCMapStringA")
#pragma comment(linker, "/export:LCMapStringEx=kernel32.LCMapStringEx")
#pragma comment(linker, "/export:LCMapStringW=kernel32.LCMapStringW")
#pragma comment(linker, "/export:LZClose=kernel32.LZClose")
#pragma comment(linker, "/export:LZCloseFile=kernel32.LZCloseFile")
#pragma comment(linker, "/export:LZCopy=kernel32.LZCopy")
#pragma comment(linker, "/export:LZCreateFileW=kernel32.LZCreateFileW")
#pragma comment(linker, "/export:LZDone=kernel32.LZDone")
#pragma comment(linker, "/export:LZInit=kernel32.LZInit")
#pragma comment(linker, "/export:LZOpenFileA=kernel32.LZOpenFileA")
#pragma comment(linker, "/export:LZOpenFileW=kernel32.LZOpenFileW")
#pragma comment(linker, "/export:LZRead=kernel32.LZRead")
#pragma comment(linker, "/export:LZSeek=kernel32.LZSeek")
#pragma comment(linker, "/export:LZStart=kernel32.LZStart")
#pragma comment(linker, "/export:LeaveCriticalSection=kernel32.LeaveCriticalSection")
#pragma comment(linker, "/export:LeaveCriticalSectionWhenCallbackReturns=kernel32.LeaveCriticalSectionWhenCallbackReturns")
#pragma comment(linker, "/export:LoadAppInitDlls=kernel32.LoadAppInitDlls")
#pragma comment(linker, "/export:LoadLibraryA=kernel32.LoadLibraryA")
#pragma comment(linker, "/export:LoadLibraryExA=kernel32.LoadLibraryExA")
#pragma comment(linker, "/export:LoadLibraryExW=kernel32.LoadLibraryExW")
#pragma comment(linker, "/export:LoadLibraryW=kernel32.LoadLibraryW")
#pragma comment(linker, "/export:LoadModule=kernel32.LoadModule")
#pragma comment(linker, "/export:LoadResource=kernel32.LoadResource")
#pragma comment(linker, "/export:LoadStringBaseExW=kernel32.LoadStringBaseExW")
#pragma comment(linker, "/export:LoadStringBaseW=kernel32.LoadStringBaseW")
#pragma comment(linker, "/export:LocalAlloc=kernel32.LocalAlloc")
#pragma comment(linker, "/export:LocalCompact=kernel32.LocalCompact")
#pragma comment(linker, "/export:LocalFileTimeToFileTime=kernel32.LocalFileTimeToFileTime")
#pragma comment(linker, "/export:LocalFlags=kernel32.LocalFlags")
#pragma comment(linker, "/export:LocalFree=kernel32.LocalFree")
#pragma comment(linker, "/export:LocalHandle=kernel32.LocalHandle")
#pragma comment(linker, "/export:LocalLock=kernel32.LocalLock")
#pragma comment(linker, "/export:LocalReAlloc=kernel32.LocalReAlloc")
#pragma comment(linker, "/export:LocalShrink=kernel32.LocalShrink")
#pragma comment(linker, "/export:LocalSize=kernel32.LocalSize")
#pragma comment(linker, "/export:LocalUnlock=kernel32.LocalUnlock")
#pragma comment(linker, "/export:LocaleNameToLCID=kernel32.LocaleNameToLCID")
#pragma comment(linker, "/export:LocateExtendedFeature=kernel32.LocateExtendedFeature")
#pragma comment(linker, "/export:LocateLegacyContext=kernel32.LocateLegacyContext")
#pragma comment(linker, "/export:LockFile=kernel32.LockFile")
#pragma comment(linker, "/export:LockFileEx=kernel32.LockFileEx")
#pragma comment(linker, "/export:LockResource=kernel32.LockResource")
#pragma comment(linker, "/export:MapUserPhysicalPages=kernel32.MapUserPhysicalPages")
#pragma comment(linker, "/export:MapUserPhysicalPagesScatter=kernel32.MapUserPhysicalPagesScatter")
#pragma comment(linker, "/export:MapViewOfFile=kernel32.MapViewOfFile")
#pragma comment(linker, "/export:MapViewOfFileEx=kernel32.MapViewOfFileEx")
#pragma comment(linker, "/export:MapViewOfFileExNuma=kernel32.MapViewOfFileExNuma")
#pragma comment(linker, "/export:Module32First=kernel32.Module32First")
#pragma comment(linker, "/export:Module32FirstW=kernel32.Module32FirstW")
#pragma comment(linker, "/export:Module32Next=kernel32.Module32Next")
#pragma comment(linker, "/export:Module32NextW=kernel32.Module32NextW")
#pragma comment(linker, "/export:MoveFileA=kernel32.MoveFileA")
#pragma comment(linker, "/export:MoveFileExA=kernel32.MoveFileExA")
#pragma comment(linker, "/export:MoveFileExW=kernel32.MoveFileExW")
#pragma comment(linker, "/export:MoveFileTransactedA=kernel32.MoveFileTransactedA")
#pragma comment(linker, "/export:MoveFileTransactedW=kernel32.MoveFileTransactedW")
#pragma comment(linker, "/export:MoveFileW=kernel32.MoveFileW")
#pragma comment(linker, "/export:MoveFileWithProgressA=kernel32.MoveFileWithProgressA")
#pragma comment(linker, "/export:MoveFileWithProgressW=kernel32.MoveFileWithProgressW")
#pragma comment(linker, "/export:MulDiv=kernel32.MulDiv")
#pragma comment(linker, "/export:MultiByteToWideChar=kernel32.MultiByteToWideChar")
#pragma comment(linker, "/export:NeedCurrentDirectoryForExePathA=kernel32.NeedCurrentDirectoryForExePathA")
#pragma comment(linker, "/export:NeedCurrentDirectoryForExePathW=kernel32.NeedCurrentDirectoryForExePathW")
#pragma comment(linker, "/export:NlsCheckPolicy=kernel32.NlsCheckPolicy")
#pragma comment(linker, "/export:NlsEventDataDescCreate=kernel32.NlsEventDataDescCreate")
#pragma comment(linker, "/export:NlsGetCacheUpdateCount=kernel32.NlsGetCacheUpdateCount")
#pragma comment(linker, "/export:NlsUpdateLocale=kernel32.NlsUpdateLocale")
#pragma comment(linker, "/export:NlsUpdateSystemLocale=kernel32.NlsUpdateSystemLocale")
#pragma comment(linker, "/export:NlsWriteEtwEvent=kernel32.NlsWriteEtwEvent")
#pragma comment(linker, "/export:NormalizeString=kernel32.NormalizeString")
#pragma comment(linker, "/export:NotifyMountMgr=kernel32.NotifyMountMgr")
#pragma comment(linker, "/export:NotifyUILanguageChange=kernel32.NotifyUILanguageChange")
#pragma comment(linker, "/export:OpenConsoleW=kernel32.OpenConsoleW")
#pragma comment(linker, "/export:OpenEventA=kernel32.OpenEventA")
#pragma comment(linker, "/export:OpenEventW=kernel32.OpenEventW")
#pragma comment(linker, "/export:OpenFile=kernel32.OpenFile")
#pragma comment(linker, "/export:OpenFileById=kernel32.OpenFileById")
#pragma comment(linker, "/export:OpenFileMappingA=kernel32.OpenFileMappingA")
#pragma comment(linker, "/export:OpenFileMappingW=kernel32.OpenFileMappingW")
#pragma comment(linker, "/export:OpenJobObjectA=kernel32.OpenJobObjectA")
#pragma comment(linker, "/export:OpenJobObjectW=kernel32.OpenJobObjectW")
#pragma comment(linker, "/export:OpenMutexA=kernel32.OpenMutexA")
#pragma comment(linker, "/export:OpenMutexW=kernel32.OpenMutexW")
#pragma comment(linker, "/export:OpenPrivateNamespaceA=kernel32.OpenPrivateNamespaceA")
#pragma comment(linker, "/export:OpenPrivateNamespaceW=kernel32.OpenPrivateNamespaceW")
#pragma comment(linker, "/export:OpenProcess=kernel32.OpenProcess")
#pragma comment(linker, "/export:OpenProcessToken=kernel32.OpenProcessToken")
#pragma comment(linker, "/export:OpenProfileUserMapping=kernel32.OpenProfileUserMapping")
#pragma comment(linker, "/export:OpenSemaphoreA=kernel32.OpenSemaphoreA")
#pragma comment(linker, "/export:OpenSemaphoreW=kernel32.OpenSemaphoreW")
#pragma comment(linker, "/export:OpenThread=kernel32.OpenThread")
#pragma comment(linker, "/export:OpenThreadToken=kernel32.OpenThreadToken")
#pragma comment(linker, "/export:OpenWaitableTimerA=kernel32.OpenWaitableTimerA")
#pragma comment(linker, "/export:OpenWaitableTimerW=kernel32.OpenWaitableTimerW")
#pragma comment(linker, "/export:OutputDebugStringA=kernel32.OutputDebugStringA")
#pragma comment(linker, "/export:OutputDebugStringW=kernel32.OutputDebugStringW")
#pragma comment(linker, "/export:PeekConsoleInputA=kernel32.PeekConsoleInputA")
#pragma comment(linker, "/export:PeekConsoleInputW=kernel32.PeekConsoleInputW")
#pragma comment(linker, "/export:PeekNamedPipe=kernel32.PeekNamedPipe")
#pragma comment(linker, "/export:PostQueuedCompletionStatus=kernel32.PostQueuedCompletionStatus")
#pragma comment(linker, "/export:PowerClearRequest=kernel32.PowerClearRequest")
#pragma comment(linker, "/export:PowerCreateRequest=kernel32.PowerCreateRequest")
#pragma comment(linker, "/export:PowerSetRequest=kernel32.PowerSetRequest")
#pragma comment(linker, "/export:PrepareTape=kernel32.PrepareTape")
#pragma comment(linker, "/export:PrivCopyFileExW=kernel32.PrivCopyFileExW")
#pragma comment(linker, "/export:PrivMoveFileIdentityW=kernel32.PrivMoveFileIdentityW")
#pragma comment(linker, "/export:Process32First=kernel32.Process32First")
#pragma comment(linker, "/export:Process32FirstW=kernel32.Process32FirstW")
#pragma comment(linker, "/export:Process32Next=kernel32.Process32Next")
#pragma comment(linker, "/export:Process32NextW=kernel32.Process32NextW")
#pragma comment(linker, "/export:ProcessIdToSessionId=kernel32.ProcessIdToSessionId")
#pragma comment(linker, "/export:PulseEvent=kernel32.PulseEvent")
#pragma comment(linker, "/export:PurgeComm=kernel32.PurgeComm")
#pragma comment(linker, "/export:QueryActCtxSettingsW=kernel32.QueryActCtxSettingsW")
#pragma comment(linker, "/export:QueryActCtxW=kernel32.QueryActCtxW")
#pragma comment(linker, "/export:QueryDepthSList=kernel32.QueryDepthSList")
#pragma comment(linker, "/export:QueryDosDeviceA=kernel32.QueryDosDeviceA")
#pragma comment(linker, "/export:QueryDosDeviceW=kernel32.QueryDosDeviceW")
#pragma comment(linker, "/export:QueryFullProcessImageNameA=kernel32.QueryFullProcessImageNameA")
#pragma comment(linker, "/export:QueryFullProcessImageNameW=kernel32.QueryFullProcessImageNameW")
#pragma comment(linker, "/export:QueryIdleProcessorCycleTime=kernel32.QueryIdleProcessorCycleTime")
#pragma comment(linker, "/export:QueryIdleProcessorCycleTimeEx=kernel32.QueryIdleProcessorCycleTimeEx")
#pragma comment(linker, "/export:QueryInformationJobObject=kernel32.QueryInformationJobObject")
#pragma comment(linker, "/export:QueryMemoryResourceNotification=kernel32.QueryMemoryResourceNotification")
#pragma comment(linker, "/export:QueryPerformanceCounter=kernel32.QueryPerformanceCounter")
#pragma comment(linker, "/export:QueryPerformanceFrequency=kernel32.QueryPerformanceFrequency")
#pragma comment(linker, "/export:QueryProcessAffinityUpdateMode=kernel32.QueryProcessAffinityUpdateMode")
#pragma comment(linker, "/export:QueryProcessCycleTime=kernel32.QueryProcessCycleTime")
#pragma comment(linker, "/export:QueryThreadCycleTime=kernel32.QueryThreadCycleTime")
#pragma comment(linker, "/export:QueryThreadProfiling=kernel32.QueryThreadProfiling")
#pragma comment(linker, "/export:QueryThreadpoolStackInformation=kernel32.QueryThreadpoolStackInformation")
#pragma comment(linker, "/export:QueryUnbiasedInterruptTime=kernel32.QueryUnbiasedInterruptTime")
#pragma comment(linker, "/export:QueueUserAPC=kernel32.QueueUserAPC")
#pragma comment(linker, "/export:QueueUserWorkItem=kernel32.QueueUserWorkItem")
#pragma comment(linker, "/export:RaiseException=kernel32.RaiseException")
#pragma comment(linker, "/export:RaiseFailFastException=kernel32.RaiseFailFastException")
#pragma comment(linker, "/export:ReOpenFile=kernel32.ReOpenFile")
#pragma comment(linker, "/export:ReadConsoleA=kernel32.ReadConsoleA")
#pragma comment(linker, "/export:ReadConsoleInputA=kernel32.ReadConsoleInputA")
#pragma comment(linker, "/export:ReadConsoleInputExA=kernel32.ReadConsoleInputExA")
#pragma comment(linker, "/export:ReadConsoleInputExW=kernel32.ReadConsoleInputExW")
#pragma comment(linker, "/export:ReadConsoleInputW=kernel32.ReadConsoleInputW")
#pragma comment(linker, "/export:ReadConsoleOutputA=kernel32.ReadConsoleOutputA")
#pragma comment(linker, "/export:ReadConsoleOutputAttribute=kernel32.ReadConsoleOutputAttribute")
#pragma comment(linker, "/export:ReadConsoleOutputCharacterA=kernel32.ReadConsoleOutputCharacterA")
#pragma comment(linker, "/export:ReadConsoleOutputCharacterW=kernel32.ReadConsoleOutputCharacterW")
#pragma comment(linker, "/export:ReadConsoleOutputW=kernel32.ReadConsoleOutputW")
#pragma comment(linker, "/export:ReadConsoleW=kernel32.ReadConsoleW")
#pragma comment(linker, "/export:ReadDirectoryChangesW=kernel32.ReadDirectoryChangesW")
#pragma comment(linker, "/export:ReadFile=kernel32.ReadFile")
#pragma comment(linker, "/export:ReadFileEx=kernel32.ReadFileEx")
#pragma comment(linker, "/export:ReadFileScatter=kernel32.ReadFileScatter")
#pragma comment(linker, "/export:ReadProcessMemory=kernel32.ReadProcessMemory")
#pragma comment(linker, "/export:ReadThreadProfilingData=kernel32.ReadThreadProfilingData")
#pragma comment(linker, "/export:RegCloseKey=kernel32.RegCloseKey")
#pragma comment(linker, "/export:RegCreateKeyExA=kernel32.RegCreateKeyExA")
#pragma comment(linker, "/export:RegCreateKeyExW=kernel32.RegCreateKeyExW")
#pragma comment(linker, "/export:RegDeleteKeyExA=kernel32.RegDeleteKeyExA")
#pragma comment(linker, "/export:RegDeleteKeyExW=kernel32.RegDeleteKeyExW")
#pragma comment(linker, "/export:RegDeleteTreeA=kernel32.RegDeleteTreeA")
#pragma comment(linker, "/export:RegDeleteTreeW=kernel32.RegDeleteTreeW")
#pragma comment(linker, "/export:RegDeleteValueA=kernel32.RegDeleteValueA")
#pragma comment(linker, "/export:RegDeleteValueW=kernel32.RegDeleteValueW")
#pragma comment(linker, "/export:RegDisablePredefinedCacheEx=kernel32.RegDisablePredefinedCacheEx")
#pragma comment(linker, "/export:RegEnumKeyExA=kernel32.RegEnumKeyExA")
#pragma comment(linker, "/export:RegEnumKeyExW=kernel32.RegEnumKeyExW")
#pragma comment(linker, "/export:RegEnumValueA=kernel32.RegEnumValueA")
#pragma comment(linker, "/export:RegEnumValueW=kernel32.RegEnumValueW")
#pragma comment(linker, "/export:RegFlushKey=kernel32.RegFlushKey")
#pragma comment(linker, "/export:RegGetKeySecurity=kernel32.RegGetKeySecurity")
#pragma comment(linker, "/export:RegGetValueA=kernel32.RegGetValueA")
#pragma comment(linker, "/export:RegGetValueW=kernel32.RegGetValueW")
#pragma comment(linker, "/export:RegKrnGetGlobalState=kernel32.RegKrnGetGlobalState")
#pragma comment(linker, "/export:RegKrnInitialize=kernel32.RegKrnInitialize")
#pragma comment(linker, "/export:RegLoadKeyA=kernel32.RegLoadKeyA")
#pragma comment(linker, "/export:RegLoadKeyW=kernel32.RegLoadKeyW")
#pragma comment(linker, "/export:RegLoadMUIStringA=kernel32.RegLoadMUIStringA")
#pragma comment(linker, "/export:RegLoadMUIStringW=kernel32.RegLoadMUIStringW")
#pragma comment(linker, "/export:RegNotifyChangeKeyValue=kernel32.RegNotifyChangeKeyValue")
#pragma comment(linker, "/export:RegOpenCurrentUser=kernel32.RegOpenCurrentUser")
#pragma comment(linker, "/export:RegOpenKeyExA=kernel32.RegOpenKeyExA")
#pragma comment(linker, "/export:RegOpenKeyExW=kernel32.RegOpenKeyExW")
#pragma comment(linker, "/export:RegOpenUserClassesRoot=kernel32.RegOpenUserClassesRoot")
#pragma comment(linker, "/export:RegQueryInfoKeyA=kernel32.RegQueryInfoKeyA")
#pragma comment(linker, "/export:RegQueryInfoKeyW=kernel32.RegQueryInfoKeyW")
#pragma comment(linker, "/export:RegQueryValueExA=kernel32.RegQueryValueExA")
#pragma comment(linker, "/export:RegQueryValueExW=kernel32.RegQueryValueExW")
#pragma comment(linker, "/export:RegRestoreKeyA=kernel32.RegRestoreKeyA")
#pragma comment(linker, "/export:RegRestoreKeyW=kernel32.RegRestoreKeyW")
#pragma comment(linker, "/export:RegSaveKeyExA=kernel32.RegSaveKeyExA")
#pragma comment(linker, "/export:RegSaveKeyExW=kernel32.RegSaveKeyExW")
#pragma comment(linker, "/export:RegSetKeySecurity=kernel32.RegSetKeySecurity")
#pragma comment(linker, "/export:RegSetValueExA=kernel32.RegSetValueExA")
#pragma comment(linker, "/export:RegSetValueExW=kernel32.RegSetValueExW")
#pragma comment(linker, "/export:RegUnLoadKeyA=kernel32.RegUnLoadKeyA")
#pragma comment(linker, "/export:RegUnLoadKeyW=kernel32.RegUnLoadKeyW")
#pragma comment(linker, "/export:RegisterApplicationRecoveryCallback=kernel32.RegisterApplicationRecoveryCallback")
#pragma comment(linker, "/export:RegisterApplicationRestart=kernel32.RegisterApplicationRestart")
#pragma comment(linker, "/export:RegisterConsoleIME=kernel32.RegisterConsoleIME")
#pragma comment(linker, "/export:RegisterConsoleOS2=kernel32.RegisterConsoleOS2")
#pragma comment(linker, "/export:RegisterConsoleVDM=kernel32.RegisterConsoleVDM")
#pragma comment(linker, "/export:RegisterWaitForInputIdle=kernel32.RegisterWaitForInputIdle")
#pragma comment(linker, "/export:RegisterWaitForSingleObject=kernel32.RegisterWaitForSingleObject")
#pragma comment(linker, "/export:RegisterWaitForSingleObjectEx=kernel32.RegisterWaitForSingleObjectEx")
#pragma comment(linker, "/export:RegisterWowBaseHandlers=kernel32.RegisterWowBaseHandlers")
#pragma comment(linker, "/export:RegisterWowExec=kernel32.RegisterWowExec")
#pragma comment(linker, "/export:ReleaseActCtx=kernel32.ReleaseActCtx")
#pragma comment(linker, "/export:ReleaseMutex=kernel32.ReleaseMutex")
#pragma comment(linker, "/export:ReleaseMutexWhenCallbackReturns=kernel32.ReleaseMutexWhenCallbackReturns")
#pragma comment(linker, "/export:ReleaseSRWLockExclusive=kernel32.ReleaseSRWLockExclusive")
#pragma comment(linker, "/export:ReleaseSRWLockShared=kernel32.ReleaseSRWLockShared")
#pragma comment(linker, "/export:ReleaseSemaphore=kernel32.ReleaseSemaphore")
#pragma comment(linker, "/export:ReleaseSemaphoreWhenCallbackReturns=kernel32.ReleaseSemaphoreWhenCallbackReturns")
#pragma comment(linker, "/export:RemoveDirectoryA=kernel32.RemoveDirectoryA")
#pragma comment(linker, "/export:RemoveDirectoryTransactedA=kernel32.RemoveDirectoryTransactedA")
#pragma comment(linker, "/export:RemoveDirectoryTransactedW=kernel32.RemoveDirectoryTransactedW")
#pragma comment(linker, "/export:RemoveDirectoryW=kernel32.RemoveDirectoryW")
#pragma comment(linker, "/export:RemoveLocalAlternateComputerNameA=kernel32.RemoveLocalAlternateComputerNameA")
#pragma comment(linker, "/export:RemoveLocalAlternateComputerNameW=kernel32.RemoveLocalAlternateComputerNameW")
#pragma comment(linker, "/export:RemoveSecureMemoryCacheCallback=kernel32.RemoveSecureMemoryCacheCallback")
#pragma comment(linker, "/export:RemoveVectoredContinueHandler=kernel32.RemoveVectoredContinueHandler")
#pragma comment(linker, "/export:RemoveVectoredExceptionHandler=kernel32.RemoveVectoredExceptionHandler")
#pragma comment(linker, "/export:ReplaceFile=kernel32.ReplaceFile")
#pragma comment(linker, "/export:ReplaceFileA=kernel32.ReplaceFileA")
#pragma comment(linker, "/export:ReplaceFileW=kernel32.ReplaceFileW")
#pragma comment(linker, "/export:ReplacePartitionUnit=kernel32.ReplacePartitionUnit")
#pragma comment(linker, "/export:RequestDeviceWakeup=kernel32.RequestDeviceWakeup")
#pragma comment(linker, "/export:RequestWakeupLatency=kernel32.RequestWakeupLatency")
#pragma comment(linker, "/export:ResetEvent=kernel32.ResetEvent")
#pragma comment(linker, "/export:ResetWriteWatch=kernel32.ResetWriteWatch")
#pragma comment(linker, "/export:ResolveLocaleName=kernel32.ResolveLocaleName")
#pragma comment(linker, "/export:RestoreLastError=kernel32.RestoreLastError")
#pragma comment(linker, "/export:ResumeThread=kernel32.ResumeThread")
#pragma comment(linker, "/export:RtlCaptureContext=kernel32.RtlCaptureContext")
#pragma comment(linker, "/export:RtlCaptureStackBackTrace=kernel32.RtlCaptureStackBackTrace")
#pragma comment(linker, "/export:RtlFillMemory=kernel32.RtlFillMemory")
#pragma comment(linker, "/export:RtlMoveMemory=kernel32.RtlMoveMemory")
#pragma comment(linker, "/export:RtlUnwind=kernel32.RtlUnwind")
#pragma comment(linker, "/export:RtlZeroMemory=kernel32.RtlZeroMemory")
#pragma comment(linker, "/export:ScrollConsoleScreenBufferA=kernel32.ScrollConsoleScreenBufferA")
#pragma comment(linker, "/export:ScrollConsoleScreenBufferW=kernel32.ScrollConsoleScreenBufferW")
#pragma comment(linker, "/export:SearchPathA=kernel32.SearchPathA")
#pragma comment(linker, "/export:SearchPathW=kernel32.SearchPathW")
#pragma comment(linker, "/export:SetCalendarInfoA=kernel32.SetCalendarInfoA")
#pragma comment(linker, "/export:SetCalendarInfoW=kernel32.SetCalendarInfoW")
#pragma comment(linker, "/export:SetClientTimeZoneInformation=kernel32.SetClientTimeZoneInformation")
#pragma comment(linker, "/export:SetComPlusPackageInstallStatus=kernel32.SetComPlusPackageInstallStatus")
#pragma comment(linker, "/export:SetCommBreak=kernel32.SetCommBreak")
#pragma comment(linker, "/export:SetCommConfig=kernel32.SetCommConfig")
#pragma comment(linker, "/export:SetCommMask=kernel32.SetCommMask")
#pragma comment(linker, "/export:SetCommState=kernel32.SetCommState")
#pragma comment(linker, "/export:SetCommTimeouts=kernel32.SetCommTimeouts")
#pragma comment(linker, "/export:SetComputerNameA=kernel32.SetComputerNameA")
#pragma comment(linker, "/export:SetComputerNameExA=kernel32.SetComputerNameExA")
#pragma comment(linker, "/export:SetComputerNameExW=kernel32.SetComputerNameExW")
#pragma comment(linker, "/export:SetComputerNameW=kernel32.SetComputerNameW")
#pragma comment(linker, "/export:SetConsoleActiveScreenBuffer=kernel32.SetConsoleActiveScreenBuffer")
#pragma comment(linker, "/export:SetConsoleCP=kernel32.SetConsoleCP")
#pragma comment(linker, "/export:SetConsoleCtrlHandler=kernel32.SetConsoleCtrlHandler")
#pragma comment(linker, "/export:SetConsoleCursor=kernel32.SetConsoleCursor")
#pragma comment(linker, "/export:SetConsoleCursorInfo=kernel32.SetConsoleCursorInfo")
#pragma comment(linker, "/export:SetConsoleCursorMode=kernel32.SetConsoleCursorMode")
#pragma comment(linker, "/export:SetConsoleCursorPosition=kernel32.SetConsoleCursorPosition")
#pragma comment(linker, "/export:SetConsoleDisplayMode=kernel32.SetConsoleDisplayMode")
#pragma comment(linker, "/export:SetConsoleFont=kernel32.SetConsoleFont")
#pragma comment(linker, "/export:SetConsoleHardwareState=kernel32.SetConsoleHardwareState")
#pragma comment(linker, "/export:SetConsoleHistoryInfo=kernel32.SetConsoleHistoryInfo")
#pragma comment(linker, "/export:SetConsoleIcon=kernel32.SetConsoleIcon")
#pragma comment(linker, "/export:SetConsoleInputExeNameA=kernel32.SetConsoleInputExeNameA")
#pragma comment(linker, "/export:SetConsoleInputExeNameW=kernel32.SetConsoleInputExeNameW")
#pragma comment(linker, "/export:SetConsoleKeyShortcuts=kernel32.SetConsoleKeyShortcuts")
#pragma comment(linker, "/export:SetConsoleLocalEUDC=kernel32.SetConsoleLocalEUDC")
#pragma comment(linker, "/export:SetConsoleMaximumWindowSize=kernel32.SetConsoleMaximumWindowSize")
#pragma comment(linker, "/export:SetConsoleMenuClose=kernel32.SetConsoleMenuClose")
#pragma comment(linker, "/export:SetConsoleMode=kernel32.SetConsoleMode")
#pragma comment(linker, "/export:SetConsoleNlsMode=kernel32.SetConsoleNlsMode")
#pragma comment(linker, "/export:SetConsoleNumberOfCommandsA=kernel32.SetConsoleNumberOfCommandsA")
#pragma comment(linker, "/export:SetConsoleNumberOfCommandsW=kernel32.SetConsoleNumberOfCommandsW")
#pragma comment(linker, "/export:SetConsoleOS2OemFormat=kernel32.SetConsoleOS2OemFormat")
#pragma comment(linker, "/export:SetConsoleOutputCP=kernel32.SetConsoleOutputCP")
#pragma comment(linker, "/export:SetConsolePalette=kernel32.SetConsolePalette")
#pragma comment(linker, "/export:SetConsoleScreenBufferInfoEx=kernel32.SetConsoleScreenBufferInfoEx")
#pragma comment(linker, "/export:SetConsoleScreenBufferSize=kernel32.SetConsoleScreenBufferSize")
#pragma comment(linker, "/export:SetConsoleTextAttribute=kernel32.SetConsoleTextAttribute")
#pragma comment(linker, "/export:SetConsoleTitleA=kernel32.SetConsoleTitleA")
#pragma comment(linker, "/export:SetConsoleTitleW=kernel32.SetConsoleTitleW")
#pragma comment(linker, "/export:SetConsoleWindowInfo=kernel32.SetConsoleWindowInfo")
#pragma comment(linker, "/export:SetCriticalSectionSpinCount=kernel32.SetCriticalSectionSpinCount")
#pragma comment(linker, "/export:SetCurrentConsoleFontEx=kernel32.SetCurrentConsoleFontEx")
#pragma comment(linker, "/export:SetCurrentDirectoryA=kernel32.SetCurrentDirectoryA")
#pragma comment(linker, "/export:SetCurrentDirectoryW=kernel32.SetCurrentDirectoryW")
#pragma comment(linker, "/export:SetDefaultCommConfigA=kernel32.SetDefaultCommConfigA")
#pragma comment(linker, "/export:SetDefaultCommConfigW=kernel32.SetDefaultCommConfigW")
#pragma comment(linker, "/export:SetDllDirectoryA=kernel32.SetDllDirectoryA")
#pragma comment(linker, "/export:SetDllDirectoryW=kernel32.SetDllDirectoryW")
#pragma comment(linker, "/export:SetDynamicTimeZoneInformation=kernel32.SetDynamicTimeZoneInformation")
#pragma comment(linker, "/export:SetEndOfFile=kernel32.SetEndOfFile")
#pragma comment(linker, "/export:SetEnvironmentStringsA=kernel32.SetEnvironmentStringsA")
#pragma comment(linker, "/export:SetEnvironmentStringsW=kernel32.SetEnvironmentStringsW")
#pragma comment(linker, "/export:SetEnvironmentVariableA=kernel32.SetEnvironmentVariableA")
#pragma comment(linker, "/export:SetEnvironmentVariableW=kernel32.SetEnvironmentVariableW")
#pragma comment(linker, "/export:SetErrorMode=kernel32.SetErrorMode")
#pragma comment(linker, "/export:SetEvent=kernel32.SetEvent")
#pragma comment(linker, "/export:SetEventWhenCallbackReturns=kernel32.SetEventWhenCallbackReturns")
#pragma comment(linker, "/export:SetExtendedFeaturesMask=kernel32.SetExtendedFeaturesMask")
#pragma comment(linker, "/export:SetFileApisToANSI=kernel32.SetFileApisToANSI")
#pragma comment(linker, "/export:SetFileApisToOEM=kernel32.SetFileApisToOEM")
#pragma comment(linker, "/export:SetFileAttributesA=kernel32.SetFileAttributesA")
#pragma comment(linker, "/export:SetFileAttributesTransactedA=kernel32.SetFileAttributesTransactedA")
#pragma comment(linker, "/export:SetFileAttributesTransactedW=kernel32.SetFileAttributesTransactedW")
#pragma comment(linker, "/export:SetFileAttributesW=kernel32.SetFileAttributesW")
#pragma comment(linker, "/export:SetFileBandwidthReservation=kernel32.SetFileBandwidthReservation")
#pragma comment(linker, "/export:SetFileCompletionNotificationModes=kernel32.SetFileCompletionNotificationModes")
#pragma comment(linker, "/export:SetFileInformationByHandle=kernel32.SetFileInformationByHandle")
#pragma comment(linker, "/export:SetFileIoOverlappedRange=kernel32.SetFileIoOverlappedRange")
#pragma comment(linker, "/export:SetFilePointer=kernel32.SetFilePointer")
#pragma comment(linker, "/export:SetFilePointerEx=kernel32.SetFilePointerEx")
#pragma comment(linker, "/export:SetFileShortNameA=kernel32.SetFileShortNameA")
#pragma comment(linker, "/export:SetFileShortNameW=kernel32.SetFileShortNameW")
#pragma comment(linker, "/export:SetFileTime=kernel32.SetFileTime")
#pragma comment(linker, "/export:SetFileValidData=kernel32.SetFileValidData")
#pragma comment(linker, "/export:SetFirmwareEnvironmentVariableA=kernel32.SetFirmwareEnvironmentVariableA")
#pragma comment(linker, "/export:SetFirmwareEnvironmentVariableW=kernel32.SetFirmwareEnvironmentVariableW")
#pragma comment(linker, "/export:SetHandleContext=kernel32.SetHandleContext")
#pragma comment(linker, "/export:SetHandleCount=kernel32.SetHandleCount")
#pragma comment(linker, "/export:SetHandleInformation=kernel32.SetHandleInformation")
#pragma comment(linker, "/export:SetInformationJobObject=kernel32.SetInformationJobObject")
#pragma comment(linker, "/export:SetLastConsoleEventActive=kernel32.SetLastConsoleEventActive")
#pragma comment(linker, "/export:SetLastError=kernel32.SetLastError")
#pragma comment(linker, "/export:SetLocalPrimaryComputerNameA=kernel32.SetLocalPrimaryComputerNameA")
#pragma comment(linker, "/export:SetLocalPrimaryComputerNameW=kernel32.SetLocalPrimaryComputerNameW")
#pragma comment(linker, "/export:SetLocalTime=kernel32.SetLocalTime")
#pragma comment(linker, "/export:SetLocaleInfoA=kernel32.SetLocaleInfoA")
#pragma comment(linker, "/export:SetLocaleInfoW=kernel32.SetLocaleInfoW")
#pragma comment(linker, "/export:SetMailslotInfo=kernel32.SetMailslotInfo")
#pragma comment(linker, "/export:SetMessageWaitingIndicator=kernel32.SetMessageWaitingIndicator")
#pragma comment(linker, "/export:SetNamedPipeAttribute=kernel32.SetNamedPipeAttribute")
#pragma comment(linker, "/export:SetNamedPipeHandleState=kernel32.SetNamedPipeHandleState")
#pragma comment(linker, "/export:SetPriorityClass=kernel32.SetPriorityClass")
#pragma comment(linker, "/export:SetProcessAffinityMask=kernel32.SetProcessAffinityMask")
#pragma comment(linker, "/export:SetProcessAffinityUpdateMode=kernel32.SetProcessAffinityUpdateMode")
#pragma comment(linker, "/export:SetProcessDEPPolicy=kernel32.SetProcessDEPPolicy")
#pragma comment(linker, "/export:SetProcessPreferredUILanguages=kernel32.SetProcessPreferredUILanguages")
#pragma comment(linker, "/export:SetProcessPriorityBoost=kernel32.SetProcessPriorityBoost")
#pragma comment(linker, "/export:SetProcessShutdownParameters=kernel32.SetProcessShutdownParameters")
#pragma comment(linker, "/export:SetProcessWorkingSetSize=kernel32.SetProcessWorkingSetSize")
#pragma comment(linker, "/export:SetProcessWorkingSetSizeEx=kernel32.SetProcessWorkingSetSizeEx")
#pragma comment(linker, "/export:SetSearchPathMode=kernel32.SetSearchPathMode")
#pragma comment(linker, "/export:SetStdHandle=kernel32.SetStdHandle")
#pragma comment(linker, "/export:SetStdHandleEx=kernel32.SetStdHandleEx")
#pragma comment(linker, "/export:SetSystemFileCacheSize=kernel32.SetSystemFileCacheSize")
#pragma comment(linker, "/export:SetSystemPowerState=kernel32.SetSystemPowerState")
#pragma comment(linker, "/export:SetSystemTime=kernel32.SetSystemTime")
#pragma comment(linker, "/export:SetSystemTimeAdjustment=kernel32.SetSystemTimeAdjustment")
#pragma comment(linker, "/export:SetTapeParameters=kernel32.SetTapeParameters")
#pragma comment(linker, "/export:SetTapePosition=kernel32.SetTapePosition")
#pragma comment(linker, "/export:SetTermsrvAppInstallMode=kernel32.SetTermsrvAppInstallMode")
#pragma comment(linker, "/export:SetThreadAffinityMask=kernel32.SetThreadAffinityMask")
#pragma comment(linker, "/export:SetThreadContext=kernel32.SetThreadContext")
#pragma comment(linker, "/export:SetThreadErrorMode=kernel32.SetThreadErrorMode")
#pragma comment(linker, "/export:SetThreadExecutionState=kernel32.SetThreadExecutionState")
#pragma comment(linker, "/export:SetThreadGroupAffinity=kernel32.SetThreadGroupAffinity")
#pragma comment(linker, "/export:SetThreadIdealProcessor=kernel32.SetThreadIdealProcessor")
#pragma comment(linker, "/export:SetThreadIdealProcessorEx=kernel32.SetThreadIdealProcessorEx")
#pragma comment(linker, "/export:SetThreadLocale=kernel32.SetThreadLocale")
#pragma comment(linker, "/export:SetThreadPreferredUILanguages=kernel32.SetThreadPreferredUILanguages")
#pragma comment(linker, "/export:SetThreadPriority=kernel32.SetThreadPriority")
#pragma comment(linker, "/export:SetThreadPriorityBoost=kernel32.SetThreadPriorityBoost")
#pragma comment(linker, "/export:SetThreadStackGuarantee=kernel32.SetThreadStackGuarantee")
#pragma comment(linker, "/export:SetThreadToken=kernel32.SetThreadToken")
#pragma comment(linker, "/export:SetThreadUILanguage=kernel32.SetThreadUILanguage")
#pragma comment(linker, "/export:SetThreadpoolStackInformation=kernel32.SetThreadpoolStackInformation")
#pragma comment(linker, "/export:SetThreadpoolThreadMaximum=kernel32.SetThreadpoolThreadMaximum")
#pragma comment(linker, "/export:SetThreadpoolThreadMinimum=kernel32.SetThreadpoolThreadMinimum")
#pragma comment(linker, "/export:SetThreadpoolTimer=kernel32.SetThreadpoolTimer")
#pragma comment(linker, "/export:SetThreadpoolWait=kernel32.SetThreadpoolWait")
#pragma comment(linker, "/export:SetTimeZoneInformation=kernel32.SetTimeZoneInformation")
#pragma comment(linker, "/export:SetTimerQueueTimer=kernel32.SetTimerQueueTimer")
#pragma comment(linker, "/export:SetUnhandledExceptionFilter=kernel32.SetUnhandledExceptionFilter")
#pragma comment(linker, "/export:SetUserGeoID=kernel32.SetUserGeoID")
#pragma comment(linker, "/export:SetVDMCurrentDirectories=kernel32.SetVDMCurrentDirectories")
#pragma comment(linker, "/export:SetVolumeLabelA=kernel32.SetVolumeLabelA")
#pragma comment(linker, "/export:SetVolumeLabelW=kernel32.SetVolumeLabelW")
#pragma comment(linker, "/export:SetVolumeMountPointA=kernel32.SetVolumeMountPointA")
#pragma comment(linker, "/export:SetVolumeMountPointW=kernel32.SetVolumeMountPointW")
#pragma comment(linker, "/export:SetWaitableTimer=kernel32.SetWaitableTimer")
#pragma comment(linker, "/export:SetWaitableTimerEx=kernel32.SetWaitableTimerEx")
#pragma comment(linker, "/export:SetupComm=kernel32.SetupComm")
#pragma comment(linker, "/export:ShowConsoleCursor=kernel32.ShowConsoleCursor")
#pragma comment(linker, "/export:SignalObjectAndWait=kernel32.SignalObjectAndWait")
#pragma comment(linker, "/export:SizeofResource=kernel32.SizeofResource")
#pragma comment(linker, "/export:Sleep=kernel32.Sleep")
#pragma comment(linker, "/export:SleepConditionVariableCS=kernel32.SleepConditionVariableCS")
#pragma comment(linker, "/export:SleepConditionVariableSRW=kernel32.SleepConditionVariableSRW")
#pragma comment(linker, "/export:SleepEx=kernel32.SleepEx")
#pragma comment(linker, "/export:SortCloseHandle=kernel32.SortCloseHandle")
#pragma comment(linker, "/export:SortGetHandle=kernel32.SortGetHandle")
#pragma comment(linker, "/export:StartThreadpoolIo=kernel32.StartThreadpoolIo")
#pragma comment(linker, "/export:SubmitThreadpoolWork=kernel32.SubmitThreadpoolWork")
#pragma comment(linker, "/export:SuspendThread=kernel32.SuspendThread")
#pragma comment(linker, "/export:SwitchToFiber=kernel32.SwitchToFiber")
#pragma comment(linker, "/export:SwitchToThread=kernel32.SwitchToThread")
#pragma comment(linker, "/export:SystemTimeToFileTime=kernel32.SystemTimeToFileTime")
#pragma comment(linker, "/export:SystemTimeToTzSpecificLocalTime=kernel32.SystemTimeToTzSpecificLocalTime")
#pragma comment(linker, "/export:TerminateJobObject=kernel32.TerminateJobObject")
#pragma comment(linker, "/export:TerminateProcess=kernel32.TerminateProcess")
#pragma comment(linker, "/export:TerminateThread=kernel32.TerminateThread")
#pragma comment(linker, "/export:TermsrvAppInstallMode=kernel32.TermsrvAppInstallMode")
#pragma comment(linker, "/export:Thread32First=kernel32.Thread32First")
#pragma comment(linker, "/export:Thread32Next=kernel32.Thread32Next")
#pragma comment(linker, "/export:TlsAlloc=kernel32.TlsAlloc")
#pragma comment(linker, "/export:TlsFree=kernel32.TlsFree")
#pragma comment(linker, "/export:TlsGetValue=kernel32.TlsGetValue")
#pragma comment(linker, "/export:TlsSetValue=kernel32.TlsSetValue")
#pragma comment(linker, "/export:Toolhelp32ReadProcessMemory=kernel32.Toolhelp32ReadProcessMemory")
#pragma comment(linker, "/export:TransactNamedPipe=kernel32.TransactNamedPipe")
#pragma comment(linker, "/export:TransmitCommChar=kernel32.TransmitCommChar")
#pragma comment(linker, "/export:TryAcquireSRWLockExclusive=kernel32.TryAcquireSRWLockExclusive")
#pragma comment(linker, "/export:TryAcquireSRWLockShared=kernel32.TryAcquireSRWLockShared")
#pragma comment(linker, "/export:TryEnterCriticalSection=kernel32.TryEnterCriticalSection")
#pragma comment(linker, "/export:TrySubmitThreadpoolCallback=kernel32.TrySubmitThreadpoolCallback")
#pragma comment(linker, "/export:TzSpecificLocalTimeToSystemTime=kernel32.TzSpecificLocalTimeToSystemTime")
#pragma comment(linker, "/export:UTRegister=kernel32.UTRegister")
#pragma comment(linker, "/export:UTUnRegister=kernel32.UTUnRegister")
#pragma comment(linker, "/export:UnhandledExceptionFilter=kernel32.UnhandledExceptionFilter")
#pragma comment(linker, "/export:UnlockFile=kernel32.UnlockFile")
#pragma comment(linker, "/export:UnlockFileEx=kernel32.UnlockFileEx")
#pragma comment(linker, "/export:UnmapViewOfFile=kernel32.UnmapViewOfFile")
#pragma comment(linker, "/export:UnregisterApplicationRecoveryCallback=kernel32.UnregisterApplicationRecoveryCallback")
#pragma comment(linker, "/export:UnregisterApplicationRestart=kernel32.UnregisterApplicationRestart")
#pragma comment(linker, "/export:UnregisterConsoleIME=kernel32.UnregisterConsoleIME")
#pragma comment(linker, "/export:UnregisterWait=kernel32.UnregisterWait")
#pragma comment(linker, "/export:UnregisterWaitEx=kernel32.UnregisterWaitEx")
#pragma comment(linker, "/export:UpdateCalendarDayOfWeek=kernel32.UpdateCalendarDayOfWeek")
#pragma comment(linker, "/export:UpdateProcThreadAttribute=kernel32.UpdateProcThreadAttribute")
#pragma comment(linker, "/export:UpdateResourceA=kernel32.UpdateResourceA")
#pragma comment(linker, "/export:UpdateResourceW=kernel32.UpdateResourceW")
#pragma comment(linker, "/export:VDMConsoleOperation=kernel32.VDMConsoleOperation")
#pragma comment(linker, "/export:VDMOperationStarted=kernel32.VDMOperationStarted")
#pragma comment(linker, "/export:VerLanguageNameA=kernel32.VerLanguageNameA")
#pragma comment(linker, "/export:VerLanguageNameW=kernel32.VerLanguageNameW")
#pragma comment(linker, "/export:VerSetConditionMask=kernel32.VerSetConditionMask")
#pragma comment(linker, "/export:VerifyConsoleIoHandle=kernel32.VerifyConsoleIoHandle")
#pragma comment(linker, "/export:VerifyScripts=kernel32.VerifyScripts")
#pragma comment(linker, "/export:VerifyVersionInfoA=kernel32.VerifyVersionInfoA")
#pragma comment(linker, "/export:VerifyVersionInfoW=kernel32.VerifyVersionInfoW")
#pragma comment(linker, "/export:VirtualAlloc=kernel32.VirtualAlloc")
#pragma comment(linker, "/export:VirtualAllocEx=kernel32.VirtualAllocEx")
#pragma comment(linker, "/export:VirtualAllocExNuma=kernel32.VirtualAllocExNuma")
#pragma comment(linker, "/export:VirtualFree=kernel32.VirtualFree")
#pragma comment(linker, "/export:VirtualFreeEx=kernel32.VirtualFreeEx")
#pragma comment(linker, "/export:VirtualLock=kernel32.VirtualLock")
#pragma comment(linker, "/export:VirtualProtect=kernel32.VirtualProtect")
#pragma comment(linker, "/export:VirtualProtectEx=kernel32.VirtualProtectEx")
#pragma comment(linker, "/export:VirtualQuery=kernel32.VirtualQuery")
#pragma comment(linker, "/export:VirtualQueryEx=kernel32.VirtualQueryEx")
#pragma comment(linker, "/export:VirtualUnlock=kernel32.VirtualUnlock")
#pragma comment(linker, "/export:WTSGetActiveConsoleSessionId=kernel32.WTSGetActiveConsoleSessionId")
#pragma comment(linker, "/export:WaitCommEvent=kernel32.WaitCommEvent")
#pragma comment(linker, "/export:WaitForDebugEvent=kernel32.WaitForDebugEvent")
#pragma comment(linker, "/export:WaitForMultipleObjects=kernel32.WaitForMultipleObjects")
#pragma comment(linker, "/export:WaitForMultipleObjectsEx=kernel32.WaitForMultipleObjectsEx")
#pragma comment(linker, "/export:WaitForSingleObject=kernel32.WaitForSingleObject")
#pragma comment(linker, "/export:WaitForSingleObjectEx=kernel32.WaitForSingleObjectEx")
#pragma comment(linker, "/export:WaitForThreadpoolIoCallbacks=kernel32.WaitForThreadpoolIoCallbacks")
#pragma comment(linker, "/export:WaitForThreadpoolTimerCallbacks=kernel32.WaitForThreadpoolTimerCallbacks")
#pragma comment(linker, "/export:WaitForThreadpoolWaitCallbacks=kernel32.WaitForThreadpoolWaitCallbacks")
#pragma comment(linker, "/export:WaitForThreadpoolWorkCallbacks=kernel32.WaitForThreadpoolWorkCallbacks")
#pragma comment(linker, "/export:WaitNamedPipeA=kernel32.WaitNamedPipeA")
#pragma comment(linker, "/export:WaitNamedPipeW=kernel32.WaitNamedPipeW")
#pragma comment(linker, "/export:WakeAllConditionVariable=kernel32.WakeAllConditionVariable")
#pragma comment(linker, "/export:WakeConditionVariable=kernel32.WakeConditionVariable")
#pragma comment(linker, "/export:WerGetFlags=kernel32.WerGetFlags")
#pragma comment(linker, "/export:WerRegisterFile=kernel32.WerRegisterFile")
#pragma comment(linker, "/export:WerRegisterMemoryBlock=kernel32.WerRegisterMemoryBlock")
#pragma comment(linker, "/export:WerRegisterRuntimeExceptionModule=kernel32.WerRegisterRuntimeExceptionModule")
#pragma comment(linker, "/export:WerSetFlags=kernel32.WerSetFlags")
#pragma comment(linker, "/export:WerUnregisterFile=kernel32.WerUnregisterFile")
#pragma comment(linker, "/export:WerUnregisterMemoryBlock=kernel32.WerUnregisterMemoryBlock")
#pragma comment(linker, "/export:WerUnregisterRuntimeExceptionModule=kernel32.WerUnregisterRuntimeExceptionModule")
#pragma comment(linker, "/export:WerpCleanupMessageMapping=kernel32.WerpCleanupMessageMapping")
#pragma comment(linker, "/export:WerpInitiateRemoteRecovery=kernel32.WerpInitiateRemoteRecovery")
#pragma comment(linker, "/export:WerpNotifyLoadStringResource=kernel32.WerpNotifyLoadStringResource")
#pragma comment(linker, "/export:WerpNotifyLoadStringResourceEx=kernel32.WerpNotifyLoadStringResourceEx")
#pragma comment(linker, "/export:WerpNotifyUseStringResource=kernel32.WerpNotifyUseStringResource")
#pragma comment(linker, "/export:WerpStringLookup=kernel32.WerpStringLookup")
#pragma comment(linker, "/export:WideCharToMultiByte=kernel32.WideCharToMultiByte")
#pragma comment(linker, "/export:WinExec=kernel32.WinExec")
#pragma comment(linker, "/export:Wow64DisableWow64FsRedirection=kernel32.Wow64DisableWow64FsRedirection")
#pragma comment(linker, "/export:Wow64EnableWow64FsRedirection=kernel32.Wow64EnableWow64FsRedirection")
#pragma comment(linker, "/export:Wow64GetThreadContext=kernel32.Wow64GetThreadContext")
#pragma comment(linker, "/export:Wow64GetThreadSelectorEntry=kernel32.Wow64GetThreadSelectorEntry")
#pragma comment(linker, "/export:Wow64RevertWow64FsRedirection=kernel32.Wow64RevertWow64FsRedirection")
#pragma comment(linker, "/export:Wow64SetThreadContext=kernel32.Wow64SetThreadContext")
#pragma comment(linker, "/export:Wow64SuspendThread=kernel32.Wow64SuspendThread")
#pragma comment(linker, "/export:WriteConsoleA=kernel32.WriteConsoleA")
#pragma comment(linker, "/export:WriteConsoleInputA=kernel32.WriteConsoleInputA")
#pragma comment(linker, "/export:WriteConsoleInputVDMA=kernel32.WriteConsoleInputVDMA")
#pragma comment(linker, "/export:WriteConsoleInputVDMW=kernel32.WriteConsoleInputVDMW")
#pragma comment(linker, "/export:WriteConsoleInputW=kernel32.WriteConsoleInputW")
#pragma comment(linker, "/export:WriteConsoleOutputA=kernel32.WriteConsoleOutputA")
#pragma comment(linker, "/export:WriteConsoleOutputAttribute=kernel32.WriteConsoleOutputAttribute")
#pragma comment(linker, "/export:WriteConsoleOutputCharacterA=kernel32.WriteConsoleOutputCharacterA")
#pragma comment(linker, "/export:WriteConsoleOutputCharacterW=kernel32.WriteConsoleOutputCharacterW")
#pragma comment(linker, "/export:WriteConsoleOutputW=kernel32.WriteConsoleOutputW")
#pragma comment(linker, "/export:WriteConsoleW=kernel32.WriteConsoleW")
#pragma comment(linker, "/export:WriteFile=kernel32.WriteFile")
#pragma comment(linker, "/export:WriteFileEx=kernel32.WriteFileEx")
#pragma comment(linker, "/export:WriteFileGather=kernel32.WriteFileGather")
#pragma comment(linker, "/export:WritePrivateProfileSectionA=kernel32.WritePrivateProfileSectionA")
#pragma comment(linker, "/export:WritePrivateProfileSectionW=kernel32.WritePrivateProfileSectionW")
#pragma comment(linker, "/export:WritePrivateProfileStringA=kernel32.WritePrivateProfileStringA")
#pragma comment(linker, "/export:WritePrivateProfileStringW=kernel32.WritePrivateProfileStringW")
#pragma comment(linker, "/export:WritePrivateProfileStructA=kernel32.WritePrivateProfileStructA")
#pragma comment(linker, "/export:WritePrivateProfileStructW=kernel32.WritePrivateProfileStructW")
#pragma comment(linker, "/export:WriteProcessMemory=kernel32.WriteProcessMemory")
#pragma comment(linker, "/export:WriteProfileSectionA=kernel32.WriteProfileSectionA")
#pragma comment(linker, "/export:WriteProfileSectionW=kernel32.WriteProfileSectionW")
#pragma comment(linker, "/export:WriteProfileStringA=kernel32.WriteProfileStringA")
#pragma comment(linker, "/export:WriteProfileStringW=kernel32.WriteProfileStringW")
#pragma comment(linker, "/export:WriteTapemark=kernel32.WriteTapemark")
#pragma comment(linker, "/export:ZombifyActCtx=kernel32.ZombifyActCtx")
#pragma comment(linker, "/export:_hread=kernel32._hread")
#pragma comment(linker, "/export:_hwrite=kernel32._hwrite")
#pragma comment(linker, "/export:_lclose=kernel32._lclose")
#pragma comment(linker, "/export:_lcreat=kernel32._lcreat")
#pragma comment(linker, "/export:_llseek=kernel32._llseek")
#pragma comment(linker, "/export:_lopen=kernel32._lopen")
#pragma comment(linker, "/export:_lread=kernel32._lread")
#pragma comment(linker, "/export:_lwrite=kernel32._lwrite")
#pragma comment(linker, "/export:lstrcat=kernel32.lstrcat")
#pragma comment(linker, "/export:lstrcatA=kernel32.lstrcatA")
#pragma comment(linker, "/export:lstrcatW=kernel32.lstrcatW")
#pragma comment(linker, "/export:lstrcmp=kernel32.lstrcmp")
#pragma comment(linker, "/export:lstrcmpA=kernel32.lstrcmpA")
#pragma comment(linker, "/export:lstrcmpW=kernel32.lstrcmpW")
#pragma comment(linker, "/export:lstrcmpi=kernel32.lstrcmpi")
#pragma comment(linker, "/export:lstrcmpiA=kernel32.lstrcmpiA")
#pragma comment(linker, "/export:lstrcmpiW=kernel32.lstrcmpiW")
#pragma comment(linker, "/export:lstrcpy=kernel32.lstrcpy")
#pragma comment(linker, "/export:lstrcpyA=kernel32.lstrcpyA")
#pragma comment(linker, "/export:lstrcpyW=kernel32.lstrcpyW")
#pragma comment(linker, "/export:lstrcpyn=kernel32.lstrcpyn")
#pragma comment(linker, "/export:lstrcpynA=kernel32.lstrcpynA")
#pragma comment(linker, "/export:lstrcpynW=kernel32.lstrcpynW")
#pragma comment(linker, "/export:lstrlen=kernel32.lstrlen")
#pragma comment(linker, "/export:lstrlenA=kernel32.lstrlenA")
#pragma comment(linker, "/export:lstrlenW=kernel32.lstrlenW")




